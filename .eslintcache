[{"/Users/davidlaufer/sprint4/src/index.js":"1","/Users/davidlaufer/sprint4/src/store/store.js":"2","/Users/davidlaufer/sprint4/src/root-cmp.jsx":"3","/Users/davidlaufer/sprint4/src/store/user.reducer.js":"4","/Users/davidlaufer/sprint4/src/store/order.reducer.js":"5","/Users/davidlaufer/sprint4/src/store/stay.reducer.js":"6","/Users/davidlaufer/sprint4/src/store/review.reducer.js":"7","/Users/davidlaufer/sprint4/src/services/user.service.js":"8","/Users/davidlaufer/sprint4/src/routes.js":"9","/Users/davidlaufer/sprint4/src/cmps/app-footer.jsx":"10","/Users/davidlaufer/sprint4/src/cmps/app-header.jsx":"11","/Users/davidlaufer/sprint4/src/store/review.actions.js":"12","/Users/davidlaufer/sprint4/src/services/async-storage.service.js":"13","/Users/davidlaufer/sprint4/src/services/event-bus.service.js":"14","/Users/davidlaufer/sprint4/src/pages/add-edit-stay.jsx":"15","/Users/davidlaufer/sprint4/src/pages/reserve-summary.jsx":"16","/Users/davidlaufer/sprint4/src/pages/stay-details.jsx":"17","/Users/davidlaufer/sprint4/src/cmps/header-profile.jsx":"18","/Users/davidlaufer/sprint4/src/services/review.service.js":"19","/Users/davidlaufer/sprint4/src/services/stay.service.js":"20","/Users/davidlaufer/sprint4/src/store/stay.actions.js":"21","/Users/davidlaufer/sprint4/src/hooks/useFormRegister.js":"22","/Users/davidlaufer/sprint4/src/cmps/stay-list.jsx":"23","/Users/davidlaufer/sprint4/src/cmps/calender.jsx":"24","/Users/davidlaufer/sprint4/src/cmps/stay-review.jsx":"25","/Users/davidlaufer/sprint4/src/services/util.service.js":"26","/Users/davidlaufer/sprint4/src/hooks/useEffectUpdate.js":"27","/Users/davidlaufer/sprint4/src/store/order.actions.js":"28","/Users/davidlaufer/sprint4/src/services/order.service.js":"29","/Users/davidlaufer/sprint4/src/cmps/stay-preview.jsx":"30","/Users/davidlaufer/sprint4/src/cmps/calc-reserve.jsx":"31","/Users/davidlaufer/sprint4/src/cmps/stayDetails/stay-keys.jsx":"32","/Users/davidlaufer/sprint4/src/cmps/stayDetails/stay-air-cover.jsx":"33","/Users/davidlaufer/sprint4/src/cmps/stayDetails/stay-amenities.jsx":"34","/Users/davidlaufer/sprint4/src/cmps/reserve.jsx":"35","/Users/davidlaufer/sprint4/src/pages/stay-app.jsx":"36","/Users/davidlaufer/sprint4/src/cmps/login-signup.jsx":"37","/Users/davidlaufer/sprint4/src/store/user.actions.js":"38","/Users/davidlaufer/sprint4/src/cmps/header-cmps/app-header.jsx":"39","/Users/davidlaufer/sprint4/src/cmps/header-cmps/header-filter.jsx":"40","/Users/davidlaufer/sprint4/src/cmps/header-cmps/header-profile.jsx":"41","/Users/davidlaufer/sprint4/src/cmps/header-cmps/header-expanded-filter.jsx":"42","/Users/davidlaufer/sprint4/src/cmps/filter/stay-filter.jsx":"43","/Users/davidlaufer/sprint4/src/cmps/header-cmps/guests-selection.jsx":"44","/Users/davidlaufer/sprint4/src/cmps/filter/expanded-filter.jsx":"45","/Users/davidlaufer/sprint4/src/cmps/header-cmps/details-header.jsx":"46","/Users/davidlaufer/sprint4/src/cmps/my-orders.jsx":"47","/Users/davidlaufer/sprint4/src/cmps/calender-date-picker.jsx":"48","/Users/davidlaufer/sprint4/src/cmps/filter/filter-by-lables.jsx":"49","/Users/davidlaufer/sprint4/src/cmps/dashboard/dashboard.jsx":"50"},{"size":790,"mtime":1663249118004,"results":"51","hashOfConfig":"52"},{"size":1089,"mtime":1663319141188,"results":"53","hashOfConfig":"52"},{"size":2316,"mtime":1665570541064,"results":"54","hashOfConfig":"52"},{"size":1393,"mtime":1663167552845,"results":"55","hashOfConfig":"52"},{"size":430,"mtime":1665480440351,"results":"56","hashOfConfig":"52"},{"size":2150,"mtime":1664828950024,"results":"57","hashOfConfig":"52"},{"size":647,"mtime":1663167552844,"results":"58","hashOfConfig":"52"},{"size":3903,"mtime":1665520956053,"results":"59","hashOfConfig":"52"},{"size":1204,"mtime":1665560153552,"results":"60","hashOfConfig":"52"},{"size":162,"mtime":1664828950006,"results":"61","hashOfConfig":"52"},{"size":1559,"mtime":1664109103203,"results":"62","hashOfConfig":"52"},{"size":1516,"mtime":1663167552844,"results":"63","hashOfConfig":"52"},{"size":2127,"mtime":1665520951050,"results":"64","hashOfConfig":"52"},{"size":1235,"mtime":1663167552837,"results":"65","hashOfConfig":"52"},{"size":1841,"mtime":1664108885363,"results":"66","hashOfConfig":"52"},{"size":1885,"mtime":1664818383834,"results":"67","hashOfConfig":"52"},{"size":5512,"mtime":1665480676463,"results":"68","hashOfConfig":"52"},{"size":585,"mtime":1664462117162,"results":"69","hashOfConfig":"52"},{"size":1864,"mtime":1663249463032,"results":"70","hashOfConfig":"52"},{"size":4825,"mtime":1665570541066,"results":"71","hashOfConfig":"52"},{"size":4094,"mtime":1664828950023,"results":"72","hashOfConfig":"52"},{"size":2347,"mtime":1663500250715,"results":"73","hashOfConfig":"52"},{"size":397,"mtime":1664462175820,"results":"74","hashOfConfig":"52"},{"size":2111,"mtime":1665483525901,"results":"75","hashOfConfig":"52"},{"size":2008,"mtime":1665477069272,"results":"76","hashOfConfig":"52"},{"size":1257,"mtime":1664828950023,"results":"77","hashOfConfig":"52"},{"size":308,"mtime":1663500250715,"results":"78","hashOfConfig":"52"},{"size":1285,"mtime":1665480441987,"results":"79","hashOfConfig":"52"},{"size":3460,"mtime":1665587219745,"results":"80","hashOfConfig":"52"},{"size":2033,"mtime":1665570541063,"results":"81","hashOfConfig":"52"},{"size":1469,"mtime":1665485077916,"results":"82","hashOfConfig":"52"},{"size":1237,"mtime":1663837881734,"results":"83","hashOfConfig":"52"},{"size":523,"mtime":1663838019616,"results":"84","hashOfConfig":"52"},{"size":12829,"mtime":1664438909740,"results":"85","hashOfConfig":"52"},{"size":11085,"mtime":1665484924435,"results":"86","hashOfConfig":"52"},{"size":1342,"mtime":1664828950018,"results":"87","hashOfConfig":"52"},{"size":8075,"mtime":1664789730247,"results":"88","hashOfConfig":"52"},{"size":2354,"mtime":1664789195394,"results":"89","hashOfConfig":"52"},{"size":2384,"mtime":1664828950014,"results":"90","hashOfConfig":"52"},{"size":1305,"mtime":1665570541062,"results":"91","hashOfConfig":"52"},{"size":1696,"mtime":1665590161450,"results":"92","hashOfConfig":"52"},{"size":3729,"mtime":1664828950015,"results":"93","hashOfConfig":"52"},{"size":1931,"mtime":1664828950013,"results":"94","hashOfConfig":"52"},{"size":4261,"mtime":1665570541061,"results":"95","hashOfConfig":"52"},{"size":3797,"mtime":1665570541058,"results":"96","hashOfConfig":"52"},{"size":1297,"mtime":1664462175818,"results":"97","hashOfConfig":"52"},{"size":4617,"mtime":1665589197384,"results":"98","hashOfConfig":"52"},{"size":2283,"mtime":1664828950009,"results":"99","hashOfConfig":"52"},{"size":2886,"mtime":1664829445732,"results":"100","hashOfConfig":"52"},{"size":6336,"mtime":1665589557490,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1bcx9lh",{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"104"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"104"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"104"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"104"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"104"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"104"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"104"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"104"},"/Users/davidlaufer/sprint4/src/index.js",[],["226","227"],"/Users/davidlaufer/sprint4/src/store/store.js",[],"/Users/davidlaufer/sprint4/src/root-cmp.jsx",[],"/Users/davidlaufer/sprint4/src/store/user.reducer.js",[],"/Users/davidlaufer/sprint4/src/store/order.reducer.js",[],"/Users/davidlaufer/sprint4/src/store/stay.reducer.js",[],"/Users/davidlaufer/sprint4/src/store/review.reducer.js",[],"/Users/davidlaufer/sprint4/src/services/user.service.js",["228","229","230","231"],"import { storageService } from './async-storage.service'\n// import { httpService } from './http.service'\nimport { getActionSetWatchedUser } from '../store/review.actions'\n// import { socketService, SOCKET_EVENT_USER_UPDATED, SOCKET_EMIT_USER_WATCH } from './socket.service'\nimport { showSuccessMsg } from '../services/event-bus.service'\n\nconst fs = require('fs')\nvar gUsers = require('../data/user.json')\n\nconst STORAGE_KEY_LOGGEDIN_USER = 'loggedinUser'\nconst STORAGE_KEY = 'user'\n\nexport const userService = {\n    login,\n    logout,\n    signup,\n    getLoggedinUser,\n    saveLocalUser,\n    getUsers,\n    getById,\n    remove,\n    update,\n    changeScore\n}\n\nwindow.userService = userService\n\n\nfunction getUsers() {\n    let users\n    return storageService.query(STORAGE_KEY).then(user => {\n        if(!user[0]){\n        fetch(\"https://randomuser.me/api/?results=5000\")\n            .then(res => res.json())\n            .then(res => {\n                users = gUsers.map((user, index) => {\n                    if(index >= 5000 ) return  ''\n                    user.imgUrl = res.results[index].picture\n                    return user\n                })\n                storageService.postMany(STORAGE_KEY, users)\n            //     _saveCarsToFile()\n            })\n        }\n        return users\n    })\n    // return httpService.get(`user`)\n}\n\nfunction onUserUpdate(user) {\n    showSuccessMsg(`This user ${user.fullname} just got updated from socket, new score: ${user.score}`)\n}\n\nasync function getById(userId) {\n    const user = await storageService.get('user', userId)\n    // const user = await httpService.get(`user/${userId}`)\n\n    // socketService.emit(SOCKET_EMIT_USER_WATCH, userId)\n    // socketService.off(SOCKET_EVENT_USER_UPDATED, onUserUpdate)\n    // socketService.on(SOCKET_EVENT_USER_UPDATED, onUserUpdate)\n\n    return user\n}\n\nfunction remove(userId) {\n    return storageService.remove('user', userId)\n    // return httpService.delete(`user/${userId}`)\n}\n\nasync function update(user) {\n    await storageService.put('user', user)\n    // user = await httpService.put(`user/${user._id}`, user)\n    // Handle case in which admin updates other user's details\n    if (getLoggedinUser()._id === user._id) saveLocalUser(user)\n    return user;\n}\n\nasync function login(userCred) {\n    const users = await storageService.query('user')\n    console.log('users:', users)\n    const user = users.find(user => user.username === userCred.username && user.password === userCred.password )\n    \n    // const user = await httpService.post('auth/login', userCred)\n    if (user) {\n        // socketService.login(user._id)\n        return saveLocalUser(user)\n    }\n}\n\nasync function signup(userCred) {\n    // userCred.score = 10000;\n    const user = await storageService.post('user', userCred)\n    // const user = await httpService.post('auth/signup', userCred)\n    // socketService.login(user._id)\n    // return saveLocalUser(user)\n}\n\nasync function logout() {\n    sessionStorage.removeItem(STORAGE_KEY_LOGGEDIN_USER)\n    // socketService.logout()\n    // return await httpService.post('auth/logout')\n}\n\nasync function changeScore(by) {\n    const user = getLoggedinUser()\n    if (!user) throw new Error('Not loggedin')\n    user.score = user.score + by || by\n    await update(user)\n    return user.score\n}\n\n\nfunction saveLocalUser(user) {\n    sessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, JSON.stringify(user))\n    return user\n}\n\nfunction getLoggedinUser() {\n    return JSON.parse(sessionStorage.getItem(STORAGE_KEY_LOGGEDIN_USER))\n}\n\nfunction _saveCarsToFile() {\n    // console.log('gUsers:', gUsers)\n    return new Promise((resolve, reject) => {\n        const data = JSON.stringify(gUsers, null, 2)\n        fs.writeFile('data/user.json', data, (err) => {\n            if (err) return reject('Cannot save to file')\n            resolve()\n        })\n    })\n}\n\n\n// ;(async ()=>{\n//     await userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 10000, isAdmin: false})\n//     await userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 10000, isAdmin: true})\n//     await userService.signup({fullname: 'Muki G', username: 'muki', password:'123', score: 10000})\n// })()\n\n\n\n","/Users/davidlaufer/sprint4/src/routes.js",["232"],"import { StayApp } from './pages/stay-app'\nimport { StayDetails } from './pages/stay-details'\nimport { StayEdit } from './pages/add-edit-stay'\nimport { ReserveSummary } from './pages/reserve-summary'\nimport { LoginSignup } from './cmps/login-signup'\nimport { MyOrders } from './cmps/my-orders'\nimport { Dashboard } from './cmps/dashboard/dashboard'\n// import { ReserveSummary } from './pages/reserve-summary'\n\nconst routes = [\n    {\n        path: '/',\n        component: <StayApp />,\n        label: 'bnbs'\n    },\n    {\n        path: '/:checkInDate/:checkOutDate/:adultsGuests/:childrenGuests/:infantsGuests/:petsGuests',\n        component: <StayApp />,\n        label: 'bnbs'\n    },\n    {\n        path: 'details/:id',\n        component: <StayDetails />,\n        label: 'Details'\n    },\n    {\n        path: 'edit',\n        component: <StayEdit />,\n        label: 'Edit'\n    },\n    {\n        path: 'summary',\n        component: <ReserveSummary />,\n        label: 'Summary'\n    },\n    {\n        path: 'my-orders',\n        component: <MyOrders/>,\n        label: 'MyOrders'\n\n    },\n    {\n        path:'Dashboard',\n        component: <Dashboard/>,\n        label: 'Dashboard'\n\n    }\n   \n]\n\nexport default routes\n","/Users/davidlaufer/sprint4/src/cmps/app-footer.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/app-header.jsx",[],["233","234"],"/Users/davidlaufer/sprint4/src/store/review.actions.js",["235","236"],"import { showSuccessMsg } from '../services/event-bus.service'\nimport { reviewService } from '../services/review.service'\nimport { userService } from '../services/user.service'\n\n// Action Creators\nexport function getActionRemoveReview(reviewId) {\n  return { type: 'REMOVE_REVIEW', reviewId }\n}\nexport function getActionAddReview(review) {\n  return { type: 'ADD_REVIEW', review }\n}\nexport function getActionSetWatchedUser(user) {\n  return { type: 'SET_WATCHED_USER', user }\n}\n\nexport function loadReviews() {\n  return async dispatch => {\n    try {\n      const reviews = await reviewService.query()\n      dispatch({ type: 'SET_REVIEWS', reviews })\n\n    } catch (err) {\n      console.log('ReviewActions: err in loadReviews', err)\n    }\n  }\n}\n\nexport function addReview(review) {\n  return async dispatch => {\n    try {\n      const addedReview = await reviewService.add(review)\n      dispatch(getActionAddReview(addedReview))\n\n      // Change the score in user kept in sessionStorage\n      // userService.saveLocalUser(addedReview.byUser)\n      // const { score } = addedReview.byUser\n      // dispatch({ type: 'SET_SCORE', score })\n\n    } catch (err) {\n      console.log('ReviewActions: err in addReview', err)\n      throw err\n    }\n  }\n}\n\nexport function removeReview(reviewId) {\n  return async dispatch => {\n    try {\n      await reviewService.remove(reviewId)\n      dispatch(getActionRemoveReview(reviewId))\n    } catch (err) {\n      console.log('ReviewActions: err in removeReview', err)\n      throw err\n    }\n  }\n}\n","/Users/davidlaufer/sprint4/src/services/async-storage.service.js",[],"/Users/davidlaufer/sprint4/src/services/event-bus.service.js",[],"/Users/davidlaufer/sprint4/src/pages/add-edit-stay.jsx",["237","238"],"// import { upload } from '@testing-library/user-event/dist/upload'\nimport { useEffect, useRef } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { useFormRegister } from '../hooks/useFormRegister'\nimport { addStay, updateStay } from '../store/stay.actions'\n\n\nexport const StayEdit = () => {\n\n    const params = useParams()\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n\n    const [register, setStay, stay] = useFormRegister({\n        name: '',\n        price: ''\n        // img: null\n    })\n\n    const inputRef = useRef()\n\n    useEffect(() => {\n        inputRef.current.focus()\n        const stayId = params.stayId\n        if (!stayId) return\n        // stayService\n        //     .getById(stayId)\n        //     .then((stay) => {\n        //         setStay(stay)\n        //     })\n        //     .catch((err) => {\n        //         console.log('err:', err)\n        //     })\n    }, [])\n\n    const onSaveStay = (ev) => {\n        ev.preventDefault()\n        if (stay._id) {\n            try {\n                dispatch(updateStay(stay))\n                navigate('/')\n            } catch (err) {\n                console.error('ERROR!', err)\n            }\n        } else {\n            try {\n                dispatch(addStay(stay))\n                navigate('/')\n            } catch (err) {\n                console.error('ERROR!', err)\n            }\n        }\n\n    }\n\n    return (\n        <form onSubmit={onSaveStay}>\n            <h1>{stay._id ? 'Edit' : 'Add'} stay</h1>\n\n            <label htmlFor=\"name\">name</label>\n            <input ref={inputRef} {...register('name', 'text')} />\n\n            <label htmlFor=\"price\">Price</label>\n            <input {...register('price', 'number')} />\n            <button>submit</button>\n        </form>\n    )\n}","/Users/davidlaufer/sprint4/src/pages/reserve-summary.jsx",[],"/Users/davidlaufer/sprint4/src/pages/stay-details.jsx",["239","240","241"],"import { useEffect, useLayoutEffect, useRef } from \"react\"\nimport { useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { Calender } from \"../cmps/calender\"\nimport { Reserve } from \"../cmps/reserve\"\nimport { stayService } from \"../services/stay.service\"\nimport { Review } from \"../cmps/stay-review\"\nimport { DetailsHeader } from \"../cmps/header-cmps/details-header\"\nimport { StayKeys } from \"../cmps/stayDetails/stay-keys\"\nimport { AirCover } from \"../cmps/stayDetails/stay-air-cover\"\nimport { Amenities } from \"../cmps/stayDetails/stay-amenities\"\n\nimport { ReactComponent as Star } from '../assets/icons/star.svg';\nimport { ReactComponent as Heart } from '../assets/icons/heart.svg';\nimport { ReactComponent as Share } from '../assets/icons/share.svg';\nimport { ReactComponent as User } from '../assets/icons/user.svg';\nimport { useSelector } from \"react-redux\"\nimport { orderService } from \"../services/order.service\"\nimport { useDispatch } from \"react-redux\"\nimport {  getOrder } from \"../store/order.actions\"\n\nexport const StayDetails = () => {\n\n    const [stay, setStay] = useState(null)\n    const [isOpen, setIsOpen] = useState(false)\n    let { order } = useSelector(state => state.orderModule)\n\n    const params = useParams()\n    const dispatch = useDispatch()\n\n    const imgSection = useRef(null)\n    const amenitiesSection = useRef(null)\n    const reviewsSection = useRef(null)\n    const startPhotos = useRef(null)\n\n    const loadStay = () => {\n        const stayId = params.id\n        stayService.getById(stayId).then((stay) => {\n            setStay(stay)\n            loadOrder(stay)\n            // setReviews(reviews)\n        })\n    }\n\n    const loadOrder = (stay) => {\n        if(!order.length) {\n            console.log('order47:', order)\n            dispatch(getOrder(stay))\n        }\n\n    }\n\n    useEffect(() => {\n        loadStay()\n        // loadOrder()\n    }, [])\n\n    useLayoutEffect(() => {\n        if (!imgSection.current) return\n        const imgObserver = new IntersectionObserver(onImgObserver, {\n            rootMargin: \"2px 0px 0px\",\n        });\n        imgObserver.observe(imgSection.current)\n\n        function onImgObserver(entries) {\n            console.log(entries, isOpen, imgSection)\n            if (!imgSection.current) return\n            entries.forEach((entry) => {\n                console.log(entry)\n                setIsOpen(!entry.isIntersecting)\n            })\n        }\n    }, [stay])\n\n    const avgRate = () => {\n        return stayService.avgRate(stay)\n    }\n\n\n    if (!stay) return <div>Loading...</div>\n    const rate = avgRate()\n\n    return <div className=\"stay-details\">\n        {(isOpen) ? <DetailsHeader myRef={{ amenitiesSection, reviewsSection, startPhotos }} stay={stay} /> : ''}\n\n        <div className=\"header-details\" ref={startPhotos}>\n            <h1>{stay.name}</h1>\n            <div className=\"mini-details\">\n                <div className=\"mini-info\">\n                    <span className=\"rate-star\"><Star /> {rate} &middot;</span>\n\n                    <button className=\"review-amount\">{stay.reviews.length} reviews</button>\n                    <span className=\"separate-dot\">&middot;</span>\n                    <span className=\"country-code\">{stay.loc.city},{stay.loc.countryCode},{stay.loc.country}</span>\n                </div>\n                <div className=\"details-actions\">\n                    <div className=\"share-details\"><button href=\"#\"><span><Share /></span>Share</button></div>\n                    <div className=\"save-details\"><button href=\"#\"><span><Heart /></span> Save</button></div>\n                </div>\n            </div>\n        </div>\n\n\n        <div className=\"img-details\" ref={imgSection} id=\"img-details\">\n            {stay.imgUrls.map((imgUrl, index) => <img className={`img-${index}`} src={`${stay.imgUrls[index]}`} alt=\"\" srcSet=\"\" key={index} />)}\n        </div>\n\n        <div className=\"main-details\">\n            <div className=\"details-section\">\n                <div className=\"mini-details\">\n                    <div className=\"stay-details\">\n                        <h2>{stay.roomType} hosted by {stay.host.fullname}</h2>\n                        <ol>\n                            <li>\n                                <span>{stay.capacity} guests</span>\n                                <span> &middot;</span>\n                            </li>\n                            <li>\n                                <span>{stay.bathrooms} bathrooms</span>\n                                <span> &middot;</span>\n                            </li>\n                            <li>\n                                <span>{stay.bedrooms} bedrooms</span>\n                            </li>\n\n                        </ol>\n                    </div>\n                    <div className=\"user-photo\"><User /></div>\n                </div>\n\n                <StayKeys />\n\n                <AirCover />\n\n                <div className=\"more-description\">\n                    <div className=\"summary\">{stay.summary}</div>\n                    <button className=\"show-more\">Show more </button>\n                </div>\n\n                <div ref={amenitiesSection}></div>\n                <Amenities stay={stay} />\n\n                <Calender stay={stay} order={order} />\n\n            </div>\n\n            <Reserve stay={stay} avgRate={rate}  />\n        </div>\n\n        <div ref={reviewsSection}></div>\n        <div className=\"reviews-section\"  >\n\n            <Review stay={stay} avgRate={rate} />\n\n        </div>\n    </div>\n\n\n}","/Users/davidlaufer/sprint4/src/cmps/header-profile.jsx",["242","243","244","245"],"/Users/davidlaufer/sprint4/src/services/review.service.js",["246"],"// import { httpService } from './http.service'\nimport { storageService } from './async-storage.service'\n// import { socketService, SOCKET_EVENT_REVIEW_ADDED, SOCKET_EVENT_REVIEW_ABOUT_YOU } from './socket.service'\nimport { getActionRemoveReview, getActionAddReview } from '../store/review.actions'\n\nconst reviewChannel = new BroadcastChannel('reviewChannel')\n\n// ;(() => {\n//   reviewChannel.addEventListener('message', (ev) => {\n//     store.dispatch(ev.data)\n//   })\n//   socketService.on(SOCKET_EVENT_REVIEW_ADDED, (review) => {\n//     console.log('GOT from socket', review)\n//     store.dispatch(getActionAddReview(review))\n//   })\n//   socketService.on(SOCKET_EVENT_REVIEW_ABOUT_YOU, (review) => {\n//     showSuccessMsg(`New review about me ${review.txt}`)\n//   })\n// })()\n\n\n\nexport const reviewService = {\n  add,\n  query,\n  remove\n}\n\n\nfunction query(filterBy) {\n  var queryStr = (!filterBy) ? '' : `?name=${filterBy.name}&sort=anaAref`\n  // return httpService.get(`review${queryStr}`)\n  return storageService.query('review')\n}\n\nasync function remove(reviewId) {\n  // await httpService.delete(`review/${reviewId}`)\n  await storageService.remove('review', reviewId)\n  reviewChannel.postMessage(getActionRemoveReview(reviewId))\n\n\n}\nasync function add(review) {\n  // const addedReview = await httpService.post(`review`, review)\n\n  // review.byUser = userService.getLoggedinUser()\n  // review.aboutUser = await userService.getById(review.aboutUserId)\n  const addedReview = await storageService.post('review', review)\n\n  reviewChannel.postMessage(getActionAddReview(addedReview))\n\n  return addedReview\n}\n\n// This way, we can also subscribe to none-store data change\n// function subscribe(listener) {\n//   reviewChannel.addEventListener('message', listener)\n// }\n// function unsubscribe(listener) {\n//   reviewChannel.removeEventListener('message', listener)\n// }\n","/Users/davidlaufer/sprint4/src/services/stay.service.js",["247","248","249","250","251","252","253","254","255","256","257","258","259","260"],"\nimport { storageService } from './async-storage.service.js'\nimport { utilService } from './util.service.js'\n// import { userService } from './user.service.js'\nconst fs = require('fs')\n// This file demonstrates how to use a BroadcastChannel to notify other browser tabs \n\nconst STORAGE_KEY = 'stay'\n\nvar gStays = require('../data/stay.json')\n\nexport const stayService = {\n    query,\n    getById,\n    save,\n    remove,\n    avgRate\n}\nwindow.cs = stayService\n\nfunction query(filterBy) {\n  console.log('query filterBy:', filterBy)\n  return storageService.query(STORAGE_KEY).then(stays => {\n    if (!stays[0]) {\n      gStays.forEach(stay => stay.reviews.map(review => {\n        review.rate = utilService.getRandomIntInclusive(3, 5)\n       \n        // review.by.imgUrl = gUsers.map(user => user._id === review.by._id ? user.imgUrl : review.by.imgUrl)\n        // console.log('review.by.imgUrl:',review.by.imgUrl )\n        return review\n      }))\n      gStays.forEach(stay => stay.beds = Math.round(stay.capacity / utilService.getRandomIntInclusive(1, 2)))\n      stays = storageService.postMany(STORAGE_KEY, gStays).then(x => console.log(x))\n    }\n\n    if (filterBy) {\n      let { maxPrice, minPrice, label } = filterBy\n      if (!maxPrice) maxPrice = Infinity\n      if (!minPrice) minPrice = 0\n      if (!label) label = ''\n      stays = stays.filter(stay => stay.price <= maxPrice && stay.price >= minPrice &&\n        stay.type.toLowerCase().includes(label.toLowerCase()) \n        )\n\n        const { Wifi, Washer, Kitchen, Dryer, Heating , EntirePlace, PrivateRoom, SharedHome} = filterBy\n        stays = stays.filter(stay => !Wifi || stay.amenities.includes('Wifi') && \n        !Washer || stay.amenities.includes('Washer') &&\n        !Kitchen || stay.amenities.includes('Kitchen') &&\n        !Dryer || stay.amenities.includes('Dryer') &&\n        !Heating || stay.amenities.includes('Heating') &&\n        \n        !EntirePlace || stay.amenities.includes('Entire home/apt') &&\n        !PrivateRoom || stay.amenities.includes('Private room') &&\n        !SharedHome || stay.amenities.includes('Shared homes') \n          )\n\n      if (filterBy.where) {\n        stays = stays.filter(stay => stay.loc.country.toLowerCase().includes(filterBy.where.toLowerCase()) ||\n          stay.loc.city.toLowerCase().includes(filterBy.where.toLowerCase()) ||\n          stay.loc.address.toLowerCase().includes(filterBy.where.toLowerCase())\n          // stay.name.toLowerCase().includes(filterBy.where.toLowerCase())\n        )\n      }\n      return stays\n    }\n    return stays\n  }\n  )\n}\n\nfunction getById(stayId) {\n  return storageService.get(STORAGE_KEY, stayId)\n  // return axios.get(`/api/stay/${stayId}`)\n}\nasync function remove(stayId) {\n  await storageService.remove(STORAGE_KEY, stayId)\n}\nasync function save(stay) {\n  var savedStay\n  if (stay._id) {\n    savedStay = await storageService.put(STORAGE_KEY, stay)\n\n  } else {\n    // Later, owner is set by the backend\n    let newStay = _getEmptyStay()\n    newStay.name = stay.name\n    newStay.price = stay.price\n    gStays.push(newStay)\n    savedStay = await storageService.post(STORAGE_KEY, newStay)\n  }\n  return _saveStayToFile()\n    .then(() => savedStay)\n}\n\nfunction _saveStayToFile() {\n  return new Promise((resolve, reject) => {\n    const data = JSON.stringify(gStays, null, 2)\n    fs.writeFile('data/stay.json', data, (err) => {\n      if (err) return reject('Cannot save to file')\n      resolve()\n    })\n  })\n}\n\nfunction _getEmptyStay() {\n  return {\n    \"type\": \"House\",\n    \"imgUrls\": [\"https://a0.muscache.com/im/pictures/e83e702f-ef49-40fb-8fa0-6512d7e26e9b.jpg?aki_policy=large\", \"otherImg.jpg\"],\n    \"summary\": \"Fantastic duplex apartment with three bedrooms, located in the historic area of Porto, Ribeira (Cube)...\",\n    \"capacity\": 8,\n    \"amenities\": [\n      \"TV\",\n      \"Wifi\",\n      \"Kitchen\",\n      \"Smoking allowed\",\n      \"Pets allowed\",\n      \"Cooking basics\"\n    ],\n    \"host\": {\n      \"_id\": \"u101\",\n      \"fullname\": \"Davit Pok\",\n      \"imgUrl\": \"https://a0.muscache.com/im/pictures/fab79f25-2e10-4f0f-9711-663cb69dc7d8.jpg?aki_policy=profile_small\",\n    },\n    \"loc\": {\n      \"country\": \"Portugal\",\n      \"countryCode\": \"PT\",\n      \"city\": \"Porto\",\n      \"address\": \"17 Kombo st\",\n      \"lat\": -8.61308,\n      \"lng\": 41.1413\n    },\n    \"reviews\": [\n      {\n        \"id\": \"madeId\",\n        \"txt\": \"Very helpful hosts. Cooked traditional...\",\n        \"rate\": 4,\n        \"by\": {\n          \"_id\": \"u102\",\n          \"fullname\": \"user2\",\n          \"imgUrl\": \"/img/img2.jpg\"\n        }\n      }\n    ],\n    \"likedByUsers\": ['mini-user'] // for user-wishlist : use $in\n  }\n\n}\n\nfunction avgRate(stay){\n  let rates = stay.reviews.map(review => review.rate)\n  rates = rates.reduce((a, b) => a + b, 0)\n  // console.log('rates:', rates)\n  return (rates / stay.reviews.length).toFixed(2)\n}\n\n\n","/Users/davidlaufer/sprint4/src/store/stay.actions.js",[],"/Users/davidlaufer/sprint4/src/hooks/useFormRegister.js",["261"],"import { useEffect, useState } from \"react\"\nimport { useEffectUpdate } from \"./useEffectUpdate\"\n\nexport const useFormRegister = (initialState, callBack) => {\n\n    const [fields, setFields] = useState(initialState)\n\n    useEffectUpdate(() => {\n        if (callBack) callBack(fields)\n    }, [fields])\n\n    const handleChange = ({ target }) => {\n        const field = target.name\n        let value = target.value\n\n        switch (target.type) {\n            case 'number':\n            case 'range':\n                value = +target.value || ''\n                break;\n            case 'checkbox':\n                value = target.checked\n                break;\n            case 'date':\n                value = new Date(value)\n                break;\n            case 'time':\n                const newDate = new Date()\n                const hours = value.split(':')[0]\n                const minutes = value.split(':')[1]\n                newDate.setHours(hours)\n                newDate.setMinutes(minutes)\n                value = newDate\n                break\n            default:\n                break\n        }\n        setFields(prevFields => ({ ...prevFields, [field]: value }))\n    }\n\n    const getFormattedDate = (value) => {\n        const valueDate = new Date(value)\n        return `${valueDate.getFullYear()}-${(valueDate.getMonth() + 1 + '').padStart(2, '0')}-${(valueDate.getDate() + '').padStart(2, '0')}`\n    }\n    const getFormattedTime = (value) => {\n        const valueTime = new Date(value)\n        return `${(valueTime.getHours() + '').padStart(2, '0')}:${(valueTime.getMinutes() + '').padStart(2, '0')}`\n    }\n    const register = (field, type = '', value) => { // value only used when type === 'radio'\n        const inputProp = {\n            onChange: handleChange,\n            name: field,\n            id: field,\n            value: fields[field],\n            type\n        }\n        if (type === 'checkbox') inputProp.checked = fields[field]\n        if (type === 'date') inputProp.value = getFormattedDate(fields[field])\n        if (type === 'time') inputProp.value = getFormattedTime(fields[field])\n        if (type === 'radio') {\n            inputProp.value = value\n            inputProp.id = value\n            inputProp.checked = fields[field] === value\n        }\n        return inputProp\n    }\n    return [register, setFields, fields]\n}","/Users/davidlaufer/sprint4/src/cmps/stay-list.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/calender.jsx",["262","263","264","265","266"],"import React, { useState, useEffect } from \"react\";\n\nimport TextField from '@mui/material/TextField';\nimport { LocalizationProvider } from '@mui/x-date-pickers-pro';\nimport { AdapterDayjs } from '@mui/x-date-pickers-pro/AdapterDayjs';\nimport { StaticDateRangePicker } from '@mui/x-date-pickers-pro/StaticDateRangePicker';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\n\n\nimport Box from '@mui/material/Box';\nimport { getOrder, saveDates, saveOrder } from \"../store/order.actions\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { orderService } from \"../services/order.service\";\n\n\nexport function Calender({ stay }) {\n  const { order } = useSelector(state => state.orderModule)\n  const [value, setValue] = useState([order.startDate, order.endDate]);\n  const dispatch = useDispatch()\n\n\n  useEffect(() => {\n    console.log('order:', order)\n    if (!value[0] || !value[1]) return\n    const startDate = new Date(value[0].$d).toLocaleDateString()\n    const endDate = new Date(value[1].$d).toLocaleDateString()\n    const currOrder = { ...order, startDate, endDate }\n    dispatch(getOrder(stay, currOrder))\n\n  }, [value])\n\n\n  const nightsStay = orderService.getDiffDates(order.startDate, order.endDate)\n\n  const getMonthName = (d) => {\n\n    return new Date(d).toLocaleDateString('en-us', { month:\"short\", day:\"numeric\", year:\"numeric\"})\n  }\n\n  return (<section className=\"calender\">\n\n    <h2>{nightsStay ? nightsStay : ''} nights in {stay.loc.city}</h2>\n    <span>{getMonthName(order.startDate)} - {getMonthName(order.endDate)}</span>\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n\n      <StaticDateRangePicker\n        displayStaticWrapperAs=\"desktop\"\n        value={value}\n        onChange={(newValue) => {\n          setValue(newValue);\n        }}\n        renderInput={(startProps, endProps) => (\n          <React.Fragment>\n            <TextField {...startProps} />\n            <Box sx={{ mx: 2 }}> to </Box>\n            <TextField {...endProps} />\n          </React.Fragment>\n        )}\n      />\n\n    </LocalizationProvider>\n  </section>);\n}\n","/Users/davidlaufer/sprint4/src/cmps/stay-review.jsx",["267"],"import { useState } from 'react';\n\nimport { ReactComponent as Star } from '../assets/icons/star.svg';\nimport { ReactComponent as User } from '../assets/icons/user.svg';\n\nexport const Review = ({ stay, avgRate }) => {   \n    const [isOpen, setIsOpen] = useState(false)\n\n    const getREviews = (minSize = 0, size = 6) => {\n        return stay.reviews.map((review, idx) =>\n            <div key= {idx} className='review'>\n                <div className='reviewer-header-details'>\n                    <div className='reviewer-img'><img src=\"https://xsgames.co/randomusers/avatar.php?g=male\" alt=\"\"/></div>\n                   \n                    <div className='reviewer-details'>\n                        <h3 className='reviewer-name'>{review.by.fullname}</h3>\n                        <div className='review-date'>{\n                        new Date(review.at).toLocaleDateString('en-us', { month:\"long\", year:\"numeric\"})\n                        \n                        }</div>\n                    </div>\n                </div>\n    \n                <div className='review-body'>\n                    {review.txt}\n                </div>\n            </div>).slice(minSize, size)\n    }\n\n    const toggleIsOpen = () => {\n        setIsOpen(!isOpen)\n    }\n\n\n\n    return (\n        <section className=\"reviews\">\n            <div className='review-header'>\n                <div className='reviews-rate'>\n                    <div><Star /></div>\n                    <div>{avgRate}</div>&middot;\n                </div>\n                <div>{stay.reviews.length} reviews</div>\n            </div>\n\n            <div className={`reviews-section ${isOpen}`}>\n                {!isOpen ?  getREviews() : getREviews(0, stay.reviews.length)}\n            </div>\n            <div className='show-all-btn'>\n                <div onClick={() => toggleIsOpen()}>\n                    {!isOpen ?  ` Show all ${stay.reviews.length} reviews` : 'Show less'}\n                   \n                </div>\n            </div>\n        </section>\n    )\n}","/Users/davidlaufer/sprint4/src/services/util.service.js",[],"/Users/davidlaufer/sprint4/src/hooks/useEffectUpdate.js",["268","269"],"import { useEffect, useRef } from \"react\"\n\nexport const useEffectUpdate = (callBack, dependencies) => {\n    \n    const isFirst = useRef(true)\n\n    useEffect(()=>{\n        if (isFirst.current) {\n            isFirst.current = false\n            return\n        }   \n        callBack()\n    }, dependencies)\n    \n}","/Users/davidlaufer/sprint4/src/store/order.actions.js",[],"/Users/davidlaufer/sprint4/src/services/order.service.js",["270","271"],"/Users/davidlaufer/sprint4/src/cmps/stay-preview.jsx",["272"],"import { Star } from \"@mui/icons-material\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { stayService } from \"../services/stay.service\";\n\nexport function StayPreview({ stay }) {\n    const params = useParams()\n    const { checkInDate, checkOutDate } = params\n\n    // const checkInDatedDate = new Date(checkInDate)\n    // const checkOutDateDate = new Date(checkOutDate)\n\n    // const checkInDateMonth = checkInDatedDate.toLocaleString('en-US', { month: 'short' })\n    // const checkOutDateInMonth = checkOutDateDate.toLocaleString('en-US', { month: 'short' })\n\n    // let isSameMonth = false\n\n    // if (checkInDate && checkOutDate && checkInDateMonth === checkOutDateInMonth) isSameMonth = true\n\n    // console.log('checkInDate:', checkInDate)\n    // console.log('checkOutDate:', checkOutDate)\n    // console.log('checkInDateMonth:', checkInDateMonth)\n    // console.log('checkOutDateInMonth:', checkOutDateInMonth)\n    // console.log('isSameMonth:', isSameMonth)\n\n    const avgRate = () => {\n        return stayService.avgRate(stay)\n    }\n    const rate = avgRate()\n\n    return (\n        <div key={stay._id} className='stay-preview'>\n            <img src={stay.imgUrls[0]} />\n            <div>\n                <div className=\"preview-title\">\n                    <p><span>{stay.loc.city}, {stay.loc.country}</span></p>\n                    <span className=\"rate-star\"><Star /> {rate}</span>\n                </div>\n                {/* {stay.type} */}\n                {/* roomType {stay.roomType} */}\n                {!checkInDate && !checkOutDate && <p>{stay.loc.address}, {stay.loc.city}</p>}\n                {checkInDate && checkOutDate && <p>{stay.summary.slice(0, 30)}...</p>}\n                {checkInDate && checkOutDate && <p>{stay.beds} beds</p>}\n                {/* {isSameMonth  && <p > {checkInDateMonth} {checkInDatedDate.getDate()} - {checkOutDateDate.getDate()} </p>} */}\n                <p className=\"price\"><span>${stay.price}</span> night</p>\n            </div>\n        </div>\n    )\n}","/Users/davidlaufer/sprint4/src/cmps/calc-reserve.jsx",["273","274"],"import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { orderService } from '../services/order.service'\nimport { getOrder } from \"../store/order.actions\";\n\n\nexport const CalcReserve = ({ stay}) => {\n    // to change all distructuring\n    const { order } = useSelector(state => state.orderModule)\n    const dispatch = useDispatch()\n\n    const nightsStay = orderService.getDiffDates(order.startDate, order.endDate)\n    const total = (stay.price * nightsStay) + 10 + 11 + (nightsStay * 10)\n\n    useEffect(() => {\n        dispatch(getOrder(stay, { ...order, total }))\n    }, [nightsStay])\n\n\n\n    return (\n        <section className=\"calc-reserve\">\n            <div className=\"total-price-nights flex\">\n                <div>${stay.price} x {nightsStay} nights</div>\n                <div>${stay.price * nightsStay}</div>\n            </div>\n            <div className=\"cleaning-fee flex\">\n                <div>Cleaning fee</div>\n                <div>$10</div>\n            </div>\n            <div className=\"service-fee flex\">\n                <div>Service fee</div>\n                <div>${11 + nightsStay * 10}</div>\n            </div>\n            <div className=\"total\">\n                <div className=\"total-amount flex\">\n                    <div>Total</div>\n                    <div>${total}</div>\n                </div>\n            </div>\n        </section>\n    )\n}","/Users/davidlaufer/sprint4/src/cmps/stayDetails/stay-keys.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/stayDetails/stay-air-cover.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/stayDetails/stay-amenities.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/reserve.jsx",["275","276","277"],"import { useState } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { useSelector } from \"react-redux\"\nimport { Link, useNavigate } from \"react-router-dom\"\nimport { getOrder, saveOrder } from \"../store/order.actions\"\nimport { CalcReserve } from \"./calc-reserve\"\n\n\nimport { ReactComponent as Star } from '../assets/icons/star.svg';\nimport { ReactComponent as Plus } from '../assets/img/vector/plus.svg';\nimport { ReactComponent as Minus } from '../assets/img/vector/minus.svg';\n\n\nexport const Reserve = ({ stay, avgRate }) => {\n\n    let { order } = useSelector(state => state.orderModule)\n    const [isOpen, setIsOpen] = useState(false)\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const [guestsCount, setGuestsCount] = useState({\n        adults: 1,\n        children: 0,\n        infants: 0,\n        pets: 0,\n    })\n\n    const toggleMenu = () => {\n        setIsOpen(!isOpen)\n    }\n\n    const onClick = (category, action) => {\n        action = action === '+' ? 1 : -1\n        if (guestsCount[category] + action < 0 || action > stay.capacity) return\n        guestsCount[category] += action\n        setGuestsCount(prevGuestsCount => ({ ...prevGuestsCount }))\n        console.log(guestsCount)\n    }\n\n    const submitReserve = () => {\n        const guests = guestsCount\n        const currOrder = { ...order, guests }\n        console.log('currOrder:', currOrder)\n        dispatch(saveOrder(currOrder)).then(\n        navigate(\"/summary\", {\n            state: {\n                stay,\n                order\n            },\n        }));\n    }\n\n    // const calcTotal = async (total) => {\n    //     console.log('total:', total)\n    //     const newOrder = await dispatch(getOrder(stay, { ...order, total }))\n    //     console.log('newOrder:', newOrder)\n    // }\n\n    const mouseMove = (e) => {\n        const rect = e.target.getBoundingClientRect();\n        const mouseX = e.pageX - e.currentTarget.offsetLeft;\n        const mouseY = e.pageY - e.currentTarget.offsetTop;\n        e.currentTarget.style.cssText = `\n    --mouse-x: ${mouseX}; \n    --mouse-y: ${mouseY};\n  `;\n    }\n\n\n    if(!order) return <h1>Loading..</h1>\n    return (\n        <div className=\"reserve-section\" >\n            <div className=\"reserve-form\">\n                <div className=\"reserve\">\n                    <div className=\"reserve-form\">\n                        <div className=\"reserve-header\">\n                            <div>\n                                <div><span className=\"price\">${stay.price}</span><span> night</span></div>\n                            </div>\n                            <div className=\"reserve-rate\">\n                                <div className=\"reserve-star\"><span className=\"star\"><Star /></span><span className=\"avg-rate\"> {avgRate} &middot;</span></div>\n                                <button className=\"reserve-reviews\"><div>{stay.reviews.length} reviews</div></button>\n                            </div>\n                        </div>\n\n                        <div className=\"reserve-info\">\n                            <div className=\"pick-dates\">\n                                <div className=\"dates-first-layer\">\n                                    <div className=\"dates-second-layer\">\n                                        <button className=\"reserve-dates\">\n                                            <div className=\"check-in\">\n                                                <div className=\"txt-reserve\">Check-in</div>\n                                                <div className=\"date-reserve\">{order.startDate ? order.startDate : ''}</div>\n                                            </div>\n                                            <div className=\"check-out\">\n                                                <div className=\"txt-reserve\">Check-out</div>\n                                                <div className=\"date-reserve\">{order.endDate ? order.endDate : ''}</div>\n                                            </div>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"guest-info\">\n                                <div className=\"guest-first-layer\">\n                                    <div className=\"guest-details-layer\">\n                                        <div className=\"guest-final-details\">\n                                            <button className=\"guests-details\" onClick={() => toggleMenu()}>\n                                                <div className=\"title\">Guests</div>\n                                                <div className=\"guest-section\">\n                                                    <div className=\"guest-description\">\n                                                        {guestsCount.adults + guestsCount.children} guest\n                                                        {(guestsCount.infants) ? ',' + guestsCount.infants + 'infants' : ''}\n                                                        {(guestsCount.pets) ? ',' + guestsCount.pets + 'pets' : ''}\n                                                    </div>\n                                                </div>\n\n                                            </button>\n                                        </div>\n                                        {isOpen &&\n\n                                            <div className=\"select-guests\">\n                                                <div className=\"pick-guest-account\">\n                                                    <div>\n                                                        <h3>Adults</h3>\n                                                        <h5>Age 13+</h5>\n                                                    </div>\n                                                    <div className=\"choose-amount\">\n                                                        <div>\n                                                        <button onClick={() => onClick('adults', '-')}><Minus/></button>\n                                                            <span>{guestsCount.adults}</span>\n                                                            <button onClick={() => onClick('adults', '+')}><Plus/></button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"pick-guest-account\">\n                                                    <div>\n                                                        <h3>Children</h3>\n                                                        <h5>Ages 2-12</h5>\n                                                    </div>\n                                                    <div className=\"choose-amount\">\n                                                        <div>\n                                                            <button onClick={() => onClick('children', '-')}><Minus/></button>\n                                                            <span>{guestsCount.children}</span>\n                                                            <button onClick={() => onClick('children', '+')}><Plus/></button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"pick-guest-account\">\n                                                    <div>\n                                                        <h3>Infants</h3>\n                                                        <h5>Under 2</h5>\n                                                    </div>\n                                                    <div className=\"choose-amount\">\n                                                        <div>\n                                                            <button onClick={() => onClick('infants', '-')}><Minus/></button>\n                                                            <span>{guestsCount.infants}</span>\n                                                            <button onClick={() => onClick('infants', '+')}><Plus/></button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"pick-guest-account\">\n                                                    <div>\n                                                        <h3>Pets</h3>\n                                                    </div>\n                                                    <div className=\"choose-amount\">\n                                                        <div>\n                                                            <button onClick={() => onClick('pets', '-')}><Minus/></button>\n                                                            <span>{guestsCount.pets}</span>\n                                                            <button onClick={() => onClick('pets', '+')}><Plus/></button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <button className=\"close-btn-reserve\" onClick={() => toggleMenu()}>close</button>\n                                            </div>\n                                        }\n                                    </div>\n\n                                </div>\n\n\n                            </div>\n                        </div>\n\n                        <div className=\"reserve-btn-section\">\n                            {/* <Link to={{ pathname: \"/summary/\", state: {order: order}}}> */}\n                            <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100\" onClick={() => submitReserve()}>\n                                <button onMouseMove={(e) => mouseMove(e)} id=\"gradientBtn\">\n                                    <span className=\"absolute inset-0 gradient opacity-0 transition-opacity duration-300\"></span>\n                                    <span className=\"relative z-1 pointer-events-none\">Reserve</span>\n                                </button>\n                            </div>\n\n                            {/* </Link> */}\n                        </div>\n\n                        {order.endDate &&\n                            <section>\n                                <div className=\"msg-txt\">\n                                    <div>You won't be charged yet</div>\n                                </div>\n                                <CalcReserve stay={stay}/>\n                            </section>\n                        }\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n    )\n}","/Users/davidlaufer/sprint4/src/pages/stay-app.jsx",["278"],"import React, { useEffect } from 'react'\n// import { connect } from 'react-redux'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { loadStays, setFilterBy } from '../store/stay.actions'\nimport { StayList } from '../cmps/stay-list'\nimport { StayFilter } from '../cmps/filter/stay-filter'\n\nexport const StayApp = () => {\n    const { stays, isFilterOpen } = useSelector(state => state.stayModule)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(loadStays())\n    }, [])\n\n    const onChangeFilter = (filterBy) => {\n        console.log('filterBy:', filterBy)\n        dispatch(setFilterBy(filterBy))\n        dispatch(loadStays())\n    }\n\n    const onClickFilter = (ev) => {\n        ev.preventDefault()\n        dispatch({\n            type: 'SET_IS_FILTER_OPEN',\n            isFilterOpen: !isFilterOpen\n        })\n        if (!isFilterOpen) dispatch(loadStays())\n    }\n    \n    if (!stays) return <div>Loading...</div>\n    return (\n        <section className={isFilterOpen ? 'filter-open bnb-app full main-layout ' : 'bnb-app full main-layout '}>\n            {/* <div onClick={onClickFilter} className='main-screen' ></div> */}\n            <StayFilter isFilterOpen={isFilterOpen} onChangeFilter={onChangeFilter} onClickFilter={onClickFilter} />\n            <StayList stays={stays} />\n        </section>\n    )\n}","/Users/davidlaufer/sprint4/src/cmps/login-signup.jsx",["279","280","281"],"\r\nimport * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport {loadUsers, onLogin} from '../store/user.actions'\r\nimport { useEffect } from 'react';\r\n\r\nconst theme = createTheme();\r\n\r\nexport function LoginSignup() {\r\n\r\n  const dispatch = useDispatch()\r\n  // const [credentials, setCredentials] = useState()\r\n  const [isSignup, setIsSignup] = useState(false)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    dispatch(loadUsers())\r\n    setIsOpen(true)\r\n  }, [])\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    const credentials = {\r\n      username: data.get('user-name'),\r\n      password: data.get('password'),\r\n    }\r\n    dispatch(onLogin(credentials));\r\n    console.log('credentials:', credentials)\r\n    setIsOpen(false)\r\n  }\r\n\r\n  const clearState = () => {\r\n    // setCredentials({ username: '', password: '', fullname: ''})\r\n    setIsSignup(false)\r\n}\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\" style={{'display': `${isOpen ? 'block' : 'none'}`}}>\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Welcome to Idebnb\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"user-name\"\r\n              label=\"User name\"\r\n              name=\"user-name\"\r\n              autoComplete=\"current-name\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n       \r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n// import { useState, useEffect } from 'react'\r\n// import { useDispatch } from 'react-redux'\r\n// import { userService } from '../services/user.service'\r\n// import { loadUsers } from '../store/user.actions'\r\n// // import { ImgUploader } from '../cmps/img-uploader'\r\n\r\n// export function LoginSignup(props) {\r\n//     const [credentials, setCredentials] = useState({ username: '', password: '', fullname: '' })\r\n//     const [isSignup, setIsSignup] = useState(false)\r\n//     const [users, setUsers] = useState([])\r\n//     const dispatch = useDispatch()\r\n\r\n//     useEffect(() => {\r\n\r\n//         async function load(){\r\n//             const users = await dispatch(loadUsers())\r\n//             setUsers(users)\r\n//         }\r\n//         load()\r\n       \r\n//     }, [])\r\n\r\n    // const clearState = () => {\r\n    //     setCredentials({ username: '', password: '', fullname: '', imgUrl: '' })\r\n    //     setIsSignup(false)\r\n    // }\r\n\r\n//     const handleChange = ev => {\r\n//         const field = ev.target.name;\r\n//         const value = ev.target.value;\r\n//         setCredentials({ ...credentials, [field]: value });\r\n//     }\r\n\r\n    // const onLogin = (ev = null) => {\r\n    //     if (ev) ev.preventDefault();\r\n    //     if (!credentials.username) return;\r\n    //     dispatch(props.onLogin(credentials));\r\n    //     console.log('credentials:', credentials)\r\n    //     clearState()\r\n    //     // props.toggleOpen()\r\n    // }\r\n\r\n//     const onSignup = (ev = null) => {\r\n//         if (ev) ev.preventDefault();\r\n//         if (!credentials.username || !credentials.password || !credentials.fullname) return;\r\n//         dispatch(props.onSignup(credentials));\r\n//         clearState()\r\n//         // props.toggleOpen()\r\n//     }\r\n\r\n//     const toggleSignup = () => {\r\n//         setIsSignup(!isSignup)\r\n//     }\r\n//     // const onUploaded = (imgUrl) => {\r\n//     //     setCredentials({ ...credentials, imgUrl });\r\n//     // }\r\n\r\n//     return (\r\n//         <div className=\"login-section\">\r\n//             <p>\r\n//                 <button className=\"btn-link\" onClick={toggleSignup}>{!isSignup ? 'Signup' : 'Login'}</button>\r\n//             </p>\r\n//             {!isSignup && <form className=\"login-form\" onSubmit={onLogin}>\r\n//                 {/* <select\r\n//                     name=\"username\"\r\n//                     value={credentials.username}\r\n//                     onChange={handleChange}\r\n//                 >\r\n//                     <option value=\"\">Select User</option>\r\n//                     {users.map(user => <option key={user._id} value={user.username}>{user.fullname}</option>)}\r\n//                 </select> */}\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     name=\"username\"\r\n//                     value={credentials.username}\r\n//                     placeholder=\"Username\"\r\n//                     onChange={handleChange}\r\n//                     required\r\n//                     autoFocus\r\n//                 />\r\n//                 <input\r\n//                     type=\"password\"\r\n//                     name=\"password\"\r\n//                     value={credentials.password}\r\n//                     placeholder=\"Password\"\r\n//                     onChange={handleChange}\r\n//                     required\r\n//                 />\r\n//                 <button>Login!</button>\r\n//             </form>}\r\n//             <div className=\"signup-section\">\r\n//                 {isSignup && <form className=\"signup-form\" onSubmit={onSignup}>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         name=\"fullname\"\r\n//                         value={credentials.fullname}\r\n//                         placeholder=\"Fullname\"\r\n//                         onChange={handleChange}\r\n//                         required\r\n//                     />\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         name=\"username\"\r\n//                         value={credentials.username}\r\n//                         placeholder=\"Username\"\r\n//                         onChange={handleChange}\r\n//                         required\r\n//                     />\r\n//                     <input\r\n//                         type=\"password\"\r\n//                         name=\"password\"\r\n//                         value={credentials.password}\r\n//                         placeholder=\"Password\"\r\n//                         onChange={handleChange}\r\n//                         required\r\n//                     />\r\n//                     {/* <ImgUploader onUploaded={onUploaded}/>                     */}\r\n//                     <button >Signup!</button>\r\n//                 </form>}\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n","/Users/davidlaufer/sprint4/src/store/user.actions.js",[],"/Users/davidlaufer/sprint4/src/cmps/header-cmps/app-header.jsx",["282"],"import { NavLink, useLocation, useParams } from 'react-router-dom'\n\nimport { HeaderFilter } from './header-filter'\nimport { HeaderProfile } from './header-profile'\nimport { HeaderExpandedFilter } from './header-expanded-filter'\n\nimport logo from '../../assets/img/logo48.png'\n\nexport function AppHeader({ layoutClass, onClickHeaderFilter, isHeaderFilterOpen }) {\n\n    const pathname = useLocation().pathname\n    const filterBy = pathname.split('/')\n\n    const checkIn = filterBy[1] === 'null' ? JSON.parse(filterBy[1]) : filterBy[1]\n    const checkOut = filterBy[2] === 'null' ? JSON.parse(filterBy[2]) : filterBy[2]\n    const guests = {\n        adultsGuests: filterBy[3] ? +filterBy[3] : 0,\n        childrenGuests: filterBy[4] ? +filterBy[4] : 0,\n        infantsGuests: filterBy[5] ? +filterBy[5] : 0,\n        petsGuests: filterBy[6] ? +filterBy[6] : 0\n    }\n\n    const guestsCount = guests.adultsGuests + guests.childrenGuests + guests.infantsGuests + guests.petsGuests\n\n    return <header className={`${layoutClass ? 'main-layout-details details-header flex full' : 'main-layout app-header flex full'} `}>\n        <section className='container flex'>\n            <NavLink to='/'>\n                <div className='logo-container flex'>\n                    <img src={logo} alt='logo' style={{ maxWidth: '37px' }} />\n                    <span>idebnb</span>\n                </div>\n            </NavLink>\n            {layoutClass ? <input type=\"text\" /> :\n                isHeaderFilterOpen ?\n                    !layoutClass && <div className='filters-container' >\n                        <div className='expanded-filter-stay'>\n                            <p >Stays</p>\n                        </div>\n                        <HeaderExpandedFilter onClickHeaderFilter={onClickHeaderFilter} checkIn={checkIn}\n                            checkOut={checkOut} guests={guests} />\n                    </div> :\n\n                    <HeaderFilter onClickHeaderFilter={onClickHeaderFilter} isHeaderFilterOpen={isHeaderFilterOpen}\n                        checkIn={checkIn} checkOut={checkOut} guestsCount={guestsCount} />\n            }\n            <div className='flex'>\n                <NavLink to='edit'>\n                    <span className='become-host-link'>Become a host</span>\n                </NavLink>\n                <HeaderProfile />\n            </div>\n        </section>\n    </header>\n}","/Users/davidlaufer/sprint4/src/cmps/header-cmps/header-filter.jsx",["283"],"import search from '../../assets/img/search-icon.png'\n\nexport function HeaderFilter({ onClickHeaderFilter, checkIn, checkOut, guestsCount }) {\n\n    const checkIndDate = new Date(checkIn)\n    const checkOutDate = new Date(checkOut)\n\n    const checkInMonth = checkIndDate.toLocaleString('en-US', { month: 'short' })\n    const checkOutInMonth = checkOutDate.toLocaleString('en-US', { month: 'short' })\n\n    return (\n        <section className=\"header-filter header-filter-position\">\n            <div className='filter-contaner'>\n                <button className='header-btn first-header-btn' onClick={onClickHeaderFilter}>Anywhere</button>\n                <span></span>\n                <button className='header-btn' onClick={onClickHeaderFilter}>\n                    {checkIn && checkOut ? < > {checkInMonth} {checkIndDate.getDate()} - {checkOutInMonth} {checkOutDate.getDate()} </> : <> Any week</>}\n                </button>\n                <span></span>\n                <button className={`header-btn search-last-btn ${guestsCount ? 'guests-count' : ''}`} onClick={onClickHeaderFilter}>{guestsCount ? guestsCount + ' guests' : 'Add guests'}</button>\n                <button className='search-btn ' onClick={onClickHeaderFilter}><img src={search} /></button>\n            </div>\n        </section>\n    )\n}","/Users/davidlaufer/sprint4/src/cmps/header-cmps/header-profile.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/header-cmps/header-expanded-filter.jsx",["284","285"],"import { useDispatch } from 'react-redux'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { useState } from 'react'\n\nimport { loadStays, setFilterBy } from '../../store/stay.actions'\nimport { useFormRegister } from '../../hooks/useFormRegister'\nimport search from '../../assets/img/search-icon.png'\nimport { GustSelection } from './guests-selection'\nimport CustomDateRangePickerDay, { CalenderPicker } from '../calender-date-picker'\n\n\nexport function HeaderExpandedFilter({ onClickHeaderFilter, checkIn, checkOut, guests }) {\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const [isGustSelectionOpen, setIsGustSelectionOpen] = useState(false)\n\n    const onOpenGuestsFilter = () => {\n        setIsGustSelectionOpen(!isGustSelectionOpen)\n    }\n\n    const onChangeFilter = (filterBy) => {\n        dispatch(setFilterBy(filterBy))\n        dispatch(loadStays())\n    }\n\n    const [register, setFilter, filterBy] = useFormRegister({\n        where: '',\n        checkInDate: checkIn,\n        checkOutDate: checkOut,\n        guestsCount: {\n            adults: guests.adultsGuests,\n            children: guests.childrenGuests,\n            infants: guests.infantsGuests,\n            pets: guests.petsGuests,\n        }\n    }, onChangeFilter)\n\n    const changeDates = (checkInDate, checkOutDate) => {\n        setFilter(filterBy => ({ ...filterBy, checkInDate: checkInDate }))\n        setFilter(filterBy => ({ ...filterBy, checkOutDate: checkOutDate }))\n    }\n\n    const changeWho = (category, action) => {\n        const { guestsCount } = filterBy\n        if (guestsCount[category] + action < 0) return\n        guestsCount[category] += action\n        setFilter(filterBy => ({ ...filterBy }))\n    }\n\n    const onFilterClicked = () => {\n        onClickHeaderFilter()\n        const checkInDate = filterBy.checkInDate ? format(new Date(filterBy.checkInDate), 'yyyy-MM-dd') : null\n        const checkOutDate = filterBy.checkOutDate ? format(new Date(filterBy.checkOutDate), 'yyyy-MM-dd') : null\n        navigate(`/${checkInDate}/${checkOutDate}/${guestsCount.adults}/${guestsCount.children}/${guestsCount.infants}/${guestsCount.pets}`)\n    }\n\n    const { guestsCount } = filterBy\n    const { adults, children, infants, pets } = guestsCount\n    const whoCount = adults + children + infants + pets\n    return (\n        <section className=\"header-filter header-filter-expanded\">\n            <div className='header-expanded-filter'>\n\n                <div className=\"where-filter\">\n                    <label htmlFor=\"\">where</label>\n                    <input className='filter-input' placeholder='Search destination' {...register('where', 'text')} />\n                </div>\n\n                <span></span>\n\n                <div className=\"when-filter\">\n                    <CustomDateRangePickerDay onOpenGuestsFilter={onOpenGuestsFilter} changeDates={changeDates} checkInDate={checkIn} checkOutDate={checkOut} />\n                </div>\n\n                <span></span>\n\n                <div className=\"who-filter-container\">\n                    <div className=\"who-filter\" onClick={onOpenGuestsFilter}>\n                        <p>who</p>\n                        <span>{whoCount ? whoCount + ' guests' : 'Add guests'}</span>\n                    </div>\n                </div>\n                <button className=\"expanded-search-btn\" onClick={onFilterClicked}>\n                    <div>\n                        <img src={search} alt=\"\" />\n                        <p>search </p>\n                    </div>\n                </button>\n            </div>\n            {isGustSelectionOpen && <GustSelection changeWho={changeWho} guestsCount={guestsCount} />}\n        </section>\n    )\n}","/Users/davidlaufer/sprint4/src/cmps/filter/stay-filter.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/header-cmps/guests-selection.jsx",["286","287"],"import { useState } from \"react\"\nimport { useSelector } from \"react-redux\"\n\nimport { ReactComponent as Plus } from '../../assets/img/vector/plus.svg';\nimport { ReactComponent as Minus } from '../../assets/img/vector/minus.svg';\n\nexport const GustSelection = ({ changeWho, guestsCount }) => {\n\n    return <div className=\"select-guests guests-selection\">\n        <div className=\"pick-guest-account\">\n            <div>\n                <h3>Adults</h3>\n                <h5>Age 13+</h5>\n            </div>\n            <div className=\"choose-amount\">\n                <div>\n                    <button onClick={() => changeWho('adults', -1)}><Minus /></button>\n                    <span>{guestsCount.adults}</span>\n                    <button onClick={() => changeWho('adults', 1)}><Plus /></button>\n                </div>\n            </div>\n        </div>\n        <div className=\"pick-guest-account\">\n            <div>\n                <h3>Children</h3>\n                <h5>Ages 2-12</h5>\n            </div>\n            <div className=\"choose-amount\">\n                <div>\n                    <button onClick={() => changeWho('children', -1)}><Minus /></button>\n                    <span>{guestsCount.children}</span>\n                    <button onClick={() => changeWho('children', 1)}><Plus /></button>\n                </div>\n            </div>\n        </div>\n        <div className=\"pick-guest-account\">\n            <div>\n                <h3>Infants</h3>\n                <h5>Under 2</h5>\n            </div>\n            <div className=\"choose-amount\">\n                <div>\n                    <button onClick={() => changeWho('infants', -1)}><Minus /></button>\n                    <span>{guestsCount.infants}</span>\n                    <button onClick={() => changeWho('infants', 1)}><Plus /></button>\n                </div>\n            </div>\n        </div>\n        <div className=\"pick-guest-account\">\n            <div>\n                <h3>Pets</h3>\n            </div>\n            <div className=\"choose-amount\">\n                <div>\n                    <button onClick={() => changeWho('pets', -1)}><Minus /></button>\n                    <span>{guestsCount.pets}</span>\n                    <button onClick={() => changeWho('pets', 1)}><Plus /></button>\n                </div>\n            </div>\n        </div>\n        {/* <button className=\"close-btn-reserve\" onClick={() => toggleMenu()}>close</button> */}\n    </div>\n}\n// export const GustSelection= ({changeWho, guestsCount})=>{\n\n//     return(\n//         // guests-selection\n//         <div className=\"select-guests\">\n//         <div className=\"pick-guest-account\">\n//             <div>\n//                 <h3>Adults</h3>\n//                 <h5>Age 13+</h5>\n//             </div>\n//             <div>\n//                 <span onClick={() => changeWho('adults', 1)}>+</span>\n//                 <span>{guestsCount.adults}</span>\n//                 <span onClick={() => changeWho('adults', -1)}>-</span>\n//             </div>\n//         </div>\n//         <div className=\"pick-guest-account\">\n//             <div>\n//                 <h3>Children</h3>\n//                 <h5>Ages 2-12</h5>\n//             </div>\n//             <div>\n//                 <span onClick={() => changeWho('children', 1)}>+</span>\n//                 <span>{guestsCount.children}</span>\n//                 <span onClick={() => changeWho('children', -1)}>-</span>\n//             </div>\n//         </div>\n//         <div className=\"pick-guest-account\">\n//             <div>\n//                 <h3>Infants</h3>\n//                 <h5>Under 2</h5>\n//             </div>\n//             <div>\n//                 <span onClick={() => changeWho('infants', 1)}>+</span>\n//                 <span>{guestsCount.infants}</span>\n//                 <span onClick={() => changeWho('infants', -1)}>-</span>\n//             </div>\n//         </div>\n//         <div className=\"pick-guest-account\">\n//             <div>\n//                 <h3>Pets</h3>\n//             </div>\n//             <div>\n//                 <span onClick={() => changeWho('pets', 1)}>+</span>\n//                 <span>{guestsCount.pets}</span>\n//                 <span onClick={() => changeWho('pets', -1)}>-</span>\n//             </div>\n//         </div>\n//     </div>\n//     )\n// }","/Users/davidlaufer/sprint4/src/cmps/filter/expanded-filter.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/header-cmps/details-header.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/my-orders.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/calender-date-picker.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/filter/filter-by-lables.jsx",["288","289"],"import React from 'react';\n\nimport OMG from '../../assets/img/vector/omg.jpg'\nimport Lakefront from '../../assets/img/vector/lakefront.jpg'\nimport Beach from '../../assets/img/vector/beach.jpg'\nimport Islands from '../../assets/img/vector/islands.jpg'\nimport Cabins from '../../assets/img/vector/cabins.jpg'\nimport Design from '../../assets/img/vector/design.jpg'\nimport Campers from '../../assets/img/vector/campers.jpg'\nimport Caves from '../../assets/img/vector/caves.jpg'\nimport Castles from '../../assets/img/vector/Castles.jpg'\nimport Beachfront from '../../assets/img/vector/Beachfront.jpg'\nimport SharedHomes from '../../assets/img/vector/shared-homes.jpg'\nimport AmazingViews from '../../assets/img/vector/amazing-views.jpg'\nimport NationalParks from '../../assets/img/vector/National parks.jpg'\nimport AmazingPools from '../../assets/img/vector/amazing-pools.jpg'\n\nexport const LabelsFilter = ({ onChangeFilter, filterBy }) => {\n\n    const labels = [{ 'OMG!': OMG }, { 'Lakefront': Lakefront }, { 'Beach': Beach }, { 'Cabins': Cabins },\n    { 'Design': Design }, { 'Campers': Campers }, { 'Caves': Caves }, { 'Castles': Castles },\n    { 'Beachfront': Beachfront }, { 'Shared homes': SharedHomes }, { 'Amazing views': AmazingViews },\n    { 'National parks': NationalParks }, { 'Amazing pools': AmazingPools }]\n\n\n    return <section className=\"filter-by-labels\">\n        {labels.map((label, idx) => {\n            let labelClass = ''\n            { if (filterBy.label && filterBy.label === Object.keys(label).toString()) labelClass = 'chosen-label' }\n\n            // console.log('label:', label)\n            return <div key={idx} className={`filter-by-label ${labelClass}` } onClick={() => onChangeFilter({ label: Object.keys(label).toString() })} >\n                <img src={Object.values(label)} alt=\"\" />\n                <p className='label-name'>{Object.keys(label).toString()}</p>\n            </div>\n        })}\n    </section>\n}\n\n// export const LabelsFilter = ({ onChangeFilter }) => {\n\n//     const labels = [{ 'OMG!': OMG }, { 'Lakefront': Lakefront }, { 'Beach': Beach }, { 'Cabins': Cabins },\n//     { 'Design': Design }, { 'Campers': Campers },{ 'Caves': Caves }, { 'Castles': Castles },\n//     { 'Beachfront': Beachfront }, { 'Shared homes': SharedHomes }, { 'Amazing views': AmazingViews },\n//     { 'National parks': NationalParks },{ 'Amazing pools':  AmazingPools}]\n\n//     return <section className=\"filter-by-labels\">\n//         {labels.map((label, idx) => {\n//             // console.log('label:', Object.values(label))\n//             return <div key={idx} className=\"filter-by-label\" onClick={() => onChangeFilter({ label: Object.keys(label).toString() })} >\n//                 <img src={Object.values(label)} alt=\"\" />\n//                 <p className='label-name'>{Object.keys(label).toString()}</p>\n//             </div>\n//         })}\n//     </section>\n// }","/Users/davidlaufer/sprint4/src/cmps/dashboard/dashboard.jsx",["290","291"],"\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { useState } from \"react\"\nimport { useEffect } from \"react\"\nimport { orderService } from \"../../services/order.service\"\nimport { userService } from \"../../services/user.service\"\n\n\nconst columns = [\n    { id: 'stayName', label: 'stay-name', minWidth: 170 },\n    { id: 'startDate', label: 'arrive-at', minWidth: 100 },\n    { id: 'endDate', label: 'leave-at', minWidth: 100 },\n    {\n        id: 'total',\n        label: 'Total',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toLocaleString('en-US'),\n    },\n    {\n        id: 'status',\n        label: 'status',\n        minWidth: 100\n    }\n\n];\n\nfunction createData(stayName, startDate, endDate, total, status, id) {\n\n    return { stayName, startDate, endDate, total, status, id };\n}\n\n\n\n\nexport function Dashboard() {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const [orders, setOrders] = useState([])\n    const [status, setStatus] = useState()\n\n    const logInUser = userService.getLoggedinUser()\n    let rows = orders.filter(order => order.hostId === logInUser._id)\n        .map(order => createData(order.stay.name, order.startDate, order.endDate, order.total, order.status, order._id))\n\n\n    useEffect(() => {\n        loadOrders()\n    }, [])\n\n    const loadOrders = async () => {\n        const orders = await orderService.query()\n        console.log('orders:', orders)\n        setOrders(orders)\n    }\n\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    const checkStatus = (value) => {\n        let color\n        switch (value) {\n            case 'pending':\n                color = 'orange'\n                break;\n            case 'confirmed':\n                color = 'green'\n                break;\n            case 'rejected':\n                color = 'red';\n                break;\n            default:\n                color = 'black';\n                break;\n        }\n        return color\n    }\n\n    const handleChange = async (ev, index) => {\n        const value = ev.target.value;\n        console.log(rows[index])\n        const order = await orderService.getById(rows[index].id)\n        console.log('order', order)\n        order.status = value\n        orderService.save(order)\n        // setStatus(value);\n    }\n\n    if (!rows) return <h1>Loading ..</h1>\n    return (\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n            <TableContainer sx={{ maxHeight: 440 }}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => (\n                                <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                >\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((row, index) => {\n                                return (\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                                        {columns.map((column) => {\n                                            const value = row[column.id];\n                                            return <React.Fragment>\n                                                {column.id === 'status' ?\n                                                    <TableCell key={column.id} align={column.align} style={{ color: checkStatus(value) }}>\n                                                       \n                                                        <select name=\"status\" id=\"status\" onChange={(event) => handleChange(event, index)}>\n                                                            <option value=\"pending\">pending</option>\n                                                            <option value=\"confirmed\">confirmed</option>\n                                                            <option value=\"rejected\">rejected</option>\n                                                            \n                                                        </select>\n\n                                                    </TableCell>\n                                                    :\n\n                                                    <TableCell key={column.id} align={column.align}>\n                                                        {column.format && typeof value === 'number'\n                                                            ? column.format(value)\n                                                            : value}\n                                                    </TableCell>\n                                                }\n\n                                            </React.Fragment>\n\n                                        })}\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </Paper>\n    );\n}\n",{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","severity":1,"message":"297","line":3,"column":10,"nodeType":"298","messageId":"299","endLine":3,"endColumn":33},{"ruleId":"296","severity":1,"message":"300","line":50,"column":10,"nodeType":"298","messageId":"299","endLine":50,"endColumn":22},{"ruleId":"296","severity":1,"message":"301","line":92,"column":11,"nodeType":"298","messageId":"299","endLine":92,"endColumn":15},{"ruleId":"296","severity":1,"message":"302","line":122,"column":10,"nodeType":"298","messageId":"299","endLine":122,"endColumn":25},{"ruleId":"296","severity":1,"message":"303","line":5,"column":10,"nodeType":"298","messageId":"299","endLine":5,"endColumn":21},{"ruleId":"292","replacedBy":"304"},{"ruleId":"294","replacedBy":"305"},{"ruleId":"296","severity":1,"message":"306","line":1,"column":10,"nodeType":"298","messageId":"299","endLine":1,"endColumn":24},{"ruleId":"296","severity":1,"message":"307","line":3,"column":10,"nodeType":"298","messageId":"299","endLine":3,"endColumn":21},{"ruleId":"296","severity":1,"message":"308","line":16,"column":22,"nodeType":"298","messageId":"299","endLine":16,"endColumn":29},{"ruleId":"309","severity":1,"message":"310","line":36,"column":8,"nodeType":"311","endLine":36,"endColumn":10,"suggestions":"312"},{"ruleId":"296","severity":1,"message":"313","line":18,"column":10,"nodeType":"298","messageId":"299","endLine":18,"endColumn":22},{"ruleId":"309","severity":1,"message":"314","line":56,"column":8,"nodeType":"311","endLine":56,"endColumn":10,"suggestions":"315"},{"ruleId":"309","severity":1,"message":"316","line":73,"column":8,"nodeType":"311","endLine":73,"endColumn":14,"suggestions":"317"},{"ruleId":"296","severity":1,"message":"318","line":2,"column":10,"nodeType":"298","messageId":"299","endLine":2,"endColumn":16},{"ruleId":"296","severity":1,"message":"319","line":3,"column":10,"nodeType":"298","messageId":"299","endLine":3,"endColumn":14},{"ruleId":"296","severity":1,"message":"320","line":3,"column":16,"nodeType":"298","messageId":"299","endLine":3,"endColumn":21},{"ruleId":"296","severity":1,"message":"321","line":3,"column":23,"nodeType":"298","messageId":"299","endLine":3,"endColumn":29},{"ruleId":"296","severity":1,"message":"322","line":31,"column":7,"nodeType":"298","messageId":"299","endLine":31,"endColumn":15},{"ruleId":"323","severity":1,"message":"324","line":46,"column":44,"nodeType":"325","messageId":"326","endLine":46,"endColumn":46},{"ruleId":"323","severity":1,"message":"324","line":46,"column":79,"nodeType":"325","messageId":"326","endLine":46,"endColumn":81},{"ruleId":"323","severity":1,"message":"324","line":47,"column":17,"nodeType":"325","messageId":"326","endLine":47,"endColumn":19},{"ruleId":"323","severity":1,"message":"324","line":47,"column":54,"nodeType":"325","messageId":"326","endLine":47,"endColumn":56},{"ruleId":"323","severity":1,"message":"324","line":48,"column":18,"nodeType":"325","messageId":"326","endLine":48,"endColumn":20},{"ruleId":"323","severity":1,"message":"324","line":48,"column":56,"nodeType":"325","messageId":"326","endLine":48,"endColumn":58},{"ruleId":"323","severity":1,"message":"324","line":49,"column":16,"nodeType":"325","messageId":"326","endLine":49,"endColumn":18},{"ruleId":"323","severity":1,"message":"324","line":49,"column":52,"nodeType":"325","messageId":"326","endLine":49,"endColumn":54},{"ruleId":"323","severity":1,"message":"324","line":50,"column":18,"nodeType":"325","messageId":"326","endLine":50,"endColumn":20},{"ruleId":"323","severity":1,"message":"324","line":50,"column":56,"nodeType":"325","messageId":"326","endLine":50,"endColumn":58},{"ruleId":"323","severity":1,"message":"324","line":52,"column":22,"nodeType":"325","messageId":"326","endLine":52,"endColumn":24},{"ruleId":"323","severity":1,"message":"324","line":52,"column":68,"nodeType":"325","messageId":"326","endLine":52,"endColumn":70},{"ruleId":"323","severity":1,"message":"324","line":53,"column":22,"nodeType":"325","messageId":"326","endLine":53,"endColumn":24},{"ruleId":"323","severity":1,"message":"324","line":53,"column":65,"nodeType":"325","messageId":"326","endLine":53,"endColumn":67},{"ruleId":"296","severity":1,"message":"327","line":1,"column":10,"nodeType":"298","messageId":"299","endLine":1,"endColumn":19},{"ruleId":"296","severity":1,"message":"328","line":7,"column":10,"nodeType":"298","messageId":"299","endLine":7,"endColumn":23},{"ruleId":"296","severity":1,"message":"329","line":7,"column":25,"nodeType":"298","messageId":"299","endLine":7,"endColumn":36},{"ruleId":"296","severity":1,"message":"330","line":11,"column":20,"nodeType":"298","messageId":"299","endLine":11,"endColumn":29},{"ruleId":"296","severity":1,"message":"331","line":11,"column":31,"nodeType":"298","messageId":"299","endLine":11,"endColumn":40},{"ruleId":"309","severity":1,"message":"332","line":31,"column":6,"nodeType":"311","endLine":31,"endColumn":13,"suggestions":"333"},{"ruleId":"296","severity":1,"message":"334","line":4,"column":28,"nodeType":"298","messageId":"299","endLine":4,"endColumn":32},{"ruleId":"309","severity":1,"message":"335","line":13,"column":8,"nodeType":"298","endLine":13,"endColumn":20},{"ruleId":"309","severity":1,"message":"336","line":13,"column":8,"nodeType":"298","endLine":13,"endColumn":20,"suggestions":"337"},{"ruleId":"296","severity":1,"message":"338","line":3,"column":10,"nodeType":"298","messageId":"299","endLine":3,"endColumn":21},{"ruleId":"296","severity":1,"message":"339","line":4,"column":10,"nodeType":"298","messageId":"299","endLine":4,"endColumn":21},{"ruleId":"340","severity":1,"message":"341","line":33,"column":13,"nodeType":"342","endLine":33,"endColumn":42},{"ruleId":"296","severity":1,"message":"343","line":1,"column":10,"nodeType":"298","messageId":"299","endLine":1,"endColumn":18},{"ruleId":"309","severity":1,"message":"344","line":19,"column":8,"nodeType":"311","endLine":19,"endColumn":20,"suggestions":"345"},{"ruleId":"296","severity":1,"message":"319","line":4,"column":10,"nodeType":"298","messageId":"299","endLine":4,"endColumn":14},{"ruleId":"296","severity":1,"message":"346","line":5,"column":10,"nodeType":"298","messageId":"299","endLine":5,"endColumn":18},{"ruleId":"296","severity":1,"message":"347","line":60,"column":15,"nodeType":"298","messageId":"299","endLine":60,"endColumn":19},{"ruleId":"309","severity":1,"message":"348","line":15,"column":8,"nodeType":"311","endLine":15,"endColumn":10,"suggestions":"349"},{"ruleId":"296","severity":1,"message":"350","line":25,"column":10,"nodeType":"298","messageId":"299","endLine":25,"endColumn":18},{"ruleId":"309","severity":1,"message":"348","line":31,"column":6,"nodeType":"311","endLine":31,"endColumn":8,"suggestions":"351"},{"ruleId":"296","severity":1,"message":"352","line":45,"column":9,"nodeType":"298","messageId":"299","endLine":45,"endColumn":19},{"ruleId":"296","severity":1,"message":"353","line":1,"column":32,"nodeType":"298","messageId":"299","endLine":1,"endColumn":41},{"ruleId":"340","severity":1,"message":"341","line":21,"column":79,"nodeType":"342","endLine":21,"endColumn":99},{"ruleId":"296","severity":1,"message":"353","line":2,"column":23,"nodeType":"298","messageId":"299","endLine":2,"endColumn":32},{"ruleId":"296","severity":1,"message":"354","line":10,"column":36,"nodeType":"298","messageId":"299","endLine":10,"endColumn":50},{"ruleId":"296","severity":1,"message":"343","line":1,"column":10,"nodeType":"298","messageId":"299","endLine":1,"endColumn":18},{"ruleId":"296","severity":1,"message":"355","line":2,"column":10,"nodeType":"298","messageId":"299","endLine":2,"endColumn":21},{"ruleId":"296","severity":1,"message":"356","line":6,"column":8,"nodeType":"298","messageId":"299","endLine":6,"endColumn":15},{"ruleId":"357","severity":1,"message":"358","line":29,"column":13,"nodeType":"359","messageId":"360","endLine":29,"endColumn":116},{"ruleId":"296","severity":1,"message":"361","line":49,"column":12,"nodeType":"298","messageId":"299","endLine":49,"endColumn":18},{"ruleId":"296","severity":1,"message":"362","line":49,"column":20,"nodeType":"298","messageId":"299","endLine":49,"endColumn":29},"no-native-reassign",["363"],"no-negated-in-lhs",["364"],"no-unused-vars","'getActionSetWatchedUser' is defined but never used.","Identifier","unusedVar","'onUserUpdate' is defined but never used.","'user' is assigned a value but never used.","'_saveCarsToFile' is defined but never used.","'LoginSignup' is defined but never used.",["363"],["364"],"'showSuccessMsg' is defined but never used.","'userService' is defined but never used.","'setStay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.stayId'. Either include it or remove the dependency array.","ArrayExpression",["365"],"'orderService' is defined but never used.","React Hook useEffect has a missing dependency: 'loadStay'. Either include it or remove the dependency array.",["366"],"React Hook useLayoutEffect has a missing dependency: 'isOpen'. Either include it or remove the dependency array.",["367"],"'useRef' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'queryStr' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'useEffect' is defined but never used.","'ThemeProvider' is defined but never used.","'createTheme' is defined but never used.","'saveDates' is defined but never used.","'saveOrder' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'order', and 'stay'. Either include them or remove the dependency array.",["368"],"'User' is defined but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array. If 'callBack' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["369"],"'utilService' is defined but never used.","'stayService' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'order', 'stay', and 'total'. Either include them or remove the dependency array.",["370"],"'getOrder' is defined but never used.","'rect' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["371"],"'isSignup' is assigned a value but never used.",["372"],"'clearState' is assigned a value but never used.","'useParams' is defined but never used.","'CalenderPicker' is defined but never used.","'useSelector' is defined but never used.","'Islands' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"385","fix":"387"},"Update the dependencies array to be: [params.stayId]",{"range":"388","text":"389"},"Update the dependencies array to be: [loadStay]",{"range":"390","text":"391"},"Update the dependencies array to be: [isOpen, stay]",{"range":"392","text":"393"},"Update the dependencies array to be: [dispatch, order, stay, value]",{"range":"394","text":"395"},"Update the dependencies array to be: [callBack]",{"range":"396","text":"397"},"Update the dependencies array to be: [dispatch, nightsStay, order, stay, total]",{"range":"398","text":"399"},"Update the dependencies array to be: [dispatch]",{"range":"400","text":"401"},{"range":"402","text":"401"},[980,982],"[params.stayId]",[1902,1904],"[loadStay]",[2441,2447],"[isOpen, stay]",[1172,1179],"[dispatch, order, stay, value]",[288,300],"[callBack]",[679,691],"[dispatch, nightsStay, order, stay, total]",[504,506],"[dispatch]",[1086,1088]]