[{"/Users/davidlaufer/sprint4/src/index.js":"1","/Users/davidlaufer/sprint4/src/store/store.js":"2","/Users/davidlaufer/sprint4/src/root-cmp.jsx":"3","/Users/davidlaufer/sprint4/src/store/user.reducer.js":"4","/Users/davidlaufer/sprint4/src/store/order.reducer.js":"5","/Users/davidlaufer/sprint4/src/store/stay.reducer.js":"6","/Users/davidlaufer/sprint4/src/store/review.reducer.js":"7","/Users/davidlaufer/sprint4/src/services/user.service.js":"8","/Users/davidlaufer/sprint4/src/routes.js":"9","/Users/davidlaufer/sprint4/src/cmps/app-footer.jsx":"10","/Users/davidlaufer/sprint4/src/cmps/app-header.jsx":"11","/Users/davidlaufer/sprint4/src/cmps/stay-filter.jsx":"12","/Users/davidlaufer/sprint4/src/store/review.actions.js":"13","/Users/davidlaufer/sprint4/src/services/async-storage.service.js":"14","/Users/davidlaufer/sprint4/src/services/event-bus.service.js":"15","/Users/davidlaufer/sprint4/src/pages/add-edit-stay.jsx":"16","/Users/davidlaufer/sprint4/src/pages/reserve-summary.jsx":"17","/Users/davidlaufer/sprint4/src/pages/stay-details.jsx":"18","/Users/davidlaufer/sprint4/src/cmps/header-filter.jsx":"19","/Users/davidlaufer/sprint4/src/cmps/header-profile.jsx":"20","/Users/davidlaufer/sprint4/src/cmps/expanded-filter.jsx":"21","/Users/davidlaufer/sprint4/src/services/review.service.js":"22","/Users/davidlaufer/sprint4/src/services/stay.service.js":"23","/Users/davidlaufer/sprint4/src/store/stay.actions.js":"24","/Users/davidlaufer/sprint4/src/hooks/useFormRegister.js":"25","/Users/davidlaufer/sprint4/src/cmps/stay-list.jsx":"26","/Users/davidlaufer/sprint4/src/cmps/calender.jsx":"27","/Users/davidlaufer/sprint4/src/cmps/stay-review.jsx":"28","/Users/davidlaufer/sprint4/src/services/util.service.js":"29","/Users/davidlaufer/sprint4/src/hooks/useEffectUpdate.js":"30","/Users/davidlaufer/sprint4/src/store/order.actions.js":"31","/Users/davidlaufer/sprint4/src/services/order.service.js":"32","/Users/davidlaufer/sprint4/src/cmps/stay-preview.jsx":"33","/Users/davidlaufer/sprint4/src/cmps/calc-reserve.jsx":"34","/Users/davidlaufer/sprint4/src/cmps/main-header.jsx":"35","/Users/davidlaufer/sprint4/src/cmps/details-header.jsx":"36","/Users/davidlaufer/sprint4/src/cmps/stayDetails/stay-keys.jsx":"37","/Users/davidlaufer/sprint4/src/cmps/stayDetails/stay-air-cover.jsx":"38","/Users/davidlaufer/sprint4/src/cmps/stayDetails/stay-amenities.jsx":"39","/Users/davidlaufer/sprint4/src/cmps/reserve.jsx":"40","/Users/davidlaufer/sprint4/src/pages/stay-app.jsx":"41","/Users/davidlaufer/sprint4/src/cmps/header-expanded-filter.jsx":"42"},{"size":790,"mtime":1663249118004,"results":"43","hashOfConfig":"44"},{"size":1089,"mtime":1663319141188,"results":"45","hashOfConfig":"44"},{"size":997,"mtime":1664108885366,"results":"46","hashOfConfig":"44"},{"size":1393,"mtime":1663167552845,"results":"47","hashOfConfig":"44"},{"size":263,"mtime":1663494704751,"results":"48","hashOfConfig":"44"},{"size":1828,"mtime":1664108885386,"results":"49","hashOfConfig":"44"},{"size":647,"mtime":1663167552844,"results":"50","hashOfConfig":"44"},{"size":3176,"mtime":1663249279319,"results":"51","hashOfConfig":"44"},{"size":745,"mtime":1664108885375,"results":"52","hashOfConfig":"44"},{"size":164,"mtime":1663849413099,"results":"53","hashOfConfig":"44"},{"size":1559,"mtime":1664109103203,"results":"54","hashOfConfig":"44"},{"size":1633,"mtime":1664108885360,"results":"55","hashOfConfig":"44"},{"size":1516,"mtime":1663167552844,"results":"56","hashOfConfig":"44"},{"size":2080,"mtime":1663167552836,"results":"57","hashOfConfig":"44"},{"size":1235,"mtime":1663167552837,"results":"58","hashOfConfig":"44"},{"size":1841,"mtime":1664108885363,"results":"59","hashOfConfig":"44"},{"size":1468,"mtime":1663804959049,"results":"60","hashOfConfig":"44"},{"size":5079,"mtime":1664103803348,"results":"61","hashOfConfig":"44"},{"size":1377,"mtime":1664108885359,"results":"62","hashOfConfig":"44"},{"size":110,"mtime":1663849413106,"results":"63","hashOfConfig":"44"},{"size":962,"mtime":1664108885358,"results":"64","hashOfConfig":"44"},{"size":1864,"mtime":1663249463032,"results":"65","hashOfConfig":"44"},{"size":3848,"mtime":1664108885381,"results":"66","hashOfConfig":"44"},{"size":4055,"mtime":1663827612621,"results":"67","hashOfConfig":"44"},{"size":2347,"mtime":1663500250715,"results":"68","hashOfConfig":"44"},{"size":396,"mtime":1663631658227,"results":"69","hashOfConfig":"44"},{"size":1146,"mtime":1664352547005,"results":"70","hashOfConfig":"44"},{"size":1714,"mtime":1664108885362,"results":"71","hashOfConfig":"44"},{"size":1256,"mtime":1664108885382,"results":"72","hashOfConfig":"44"},{"size":308,"mtime":1663500250715,"results":"73","hashOfConfig":"44"},{"size":1038,"mtime":1664108885384,"results":"74","hashOfConfig":"44"},{"size":2089,"mtime":1664108885379,"results":"75","hashOfConfig":"44"},{"size":1474,"mtime":1664108885362,"results":"76","hashOfConfig":"44"},{"size":1528,"mtime":1664108885357,"results":"77","hashOfConfig":"44"},{"size":790,"mtime":1663681084510,"results":"78","hashOfConfig":"44"},{"size":1297,"mtime":1663827143469,"results":"79","hashOfConfig":"44"},{"size":1237,"mtime":1663837881734,"results":"80","hashOfConfig":"44"},{"size":523,"mtime":1663838019616,"results":"81","hashOfConfig":"44"},{"size":12808,"mtime":1664352514633,"results":"82","hashOfConfig":"44"},{"size":10688,"mtime":1664108708185,"results":"83","hashOfConfig":"44"},{"size":1407,"mtime":1664108885365,"results":"84","hashOfConfig":"44"},{"size":2938,"mtime":1664108885358,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1bcx9lh",{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"88"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"88"},"/Users/davidlaufer/sprint4/src/index.js",[],["184","185"],"/Users/davidlaufer/sprint4/src/store/store.js",[],"/Users/davidlaufer/sprint4/src/root-cmp.jsx",[],"/Users/davidlaufer/sprint4/src/store/user.reducer.js",[],"/Users/davidlaufer/sprint4/src/store/order.reducer.js",[],"/Users/davidlaufer/sprint4/src/store/stay.reducer.js",[],"/Users/davidlaufer/sprint4/src/store/review.reducer.js",[],"/Users/davidlaufer/sprint4/src/services/user.service.js",["186","187"],"import { storageService } from './async-storage.service'\n// import { httpService } from './http.service'\nimport { getActionSetWatchedUser } from '../store/review.actions'\n// import { socketService, SOCKET_EVENT_USER_UPDATED, SOCKET_EMIT_USER_WATCH } from './socket.service'\nimport { showSuccessMsg } from '../services/event-bus.service'\n\nconst STORAGE_KEY_LOGGEDIN_USER = 'loggedinUser'\n\nexport const userService = {\n    login,\n    logout,\n    signup,\n    getLoggedinUser,\n    saveLocalUser,\n    getUsers,\n    getById,\n    remove,\n    update,\n    changeScore\n}\n\nwindow.userService = userService\n\n\nfunction getUsers() {\n    return storageService.query('user')\n    // return httpService.get(`user`)\n}\n\nfunction onUserUpdate(user) {\n    showSuccessMsg(`This user ${user.fullname} just got updated from socket, new score: ${user.score}`)\n}\n\nasync function getById(userId) {\n    const user = await storageService.get('user', userId)\n    // const user = await httpService.get(`user/${userId}`)\n\n    // socketService.emit(SOCKET_EMIT_USER_WATCH, userId)\n    // socketService.off(SOCKET_EVENT_USER_UPDATED, onUserUpdate)\n    // socketService.on(SOCKET_EVENT_USER_UPDATED, onUserUpdate)\n\n    return user\n}\nfunction remove(userId) {\n    return storageService.remove('user', userId)\n    // return httpService.delete(`user/${userId}`)\n}\n\nasync function update(user) {\n    await storageService.put('user', user)\n    // user = await httpService.put(`user/${user._id}`, user)\n    // Handle case in which admin updates other user's details\n    if (getLoggedinUser()._id === user._id) saveLocalUser(user)\n    return user;\n}\n\nasync function login(userCred) {\n    const users = await storageService.query('user')\n    const user = users.find(user => user.username === userCred.username)\n    // const user = await httpService.post('auth/login', userCred)\n    if (user) {\n        // socketService.login(user._id)\n        return saveLocalUser(user)\n    }\n}\nasync function signup(userCred) {\n    userCred.score = 10000;\n    const user = await storageService.post('user', userCred)\n    // const user = await httpService.post('auth/signup', userCred)\n    // socketService.login(user._id)\n    return saveLocalUser(user)\n}\nasync function logout() {\n    sessionStorage.removeItem(STORAGE_KEY_LOGGEDIN_USER)\n    // socketService.logout()\n    // return await httpService.post('auth/logout')\n}\n\nasync function changeScore(by) {\n    const user = getLoggedinUser()\n    if (!user) throw new Error('Not loggedin')\n    user.score = user.score + by || by\n    await update(user)\n    return user.score\n}\n\n\nfunction saveLocalUser(user) {\n    sessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, JSON.stringify(user))\n    return user\n}\n\nfunction getLoggedinUser() {\n    return JSON.parse(sessionStorage.getItem(STORAGE_KEY_LOGGEDIN_USER))\n}\n\n\n// ;(async ()=>{\n//     await userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 10000, isAdmin: false})\n//     await userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 10000, isAdmin: true})\n//     await userService.signup({fullname: 'Muki G', username: 'muki', password:'123', score: 10000})\n// })()\n\n\n\n","/Users/davidlaufer/sprint4/src/routes.js",[],"/Users/davidlaufer/sprint4/src/cmps/app-footer.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/app-header.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/stay-filter.jsx",[],"/Users/davidlaufer/sprint4/src/store/review.actions.js",["188","189"],"import { showSuccessMsg } from '../services/event-bus.service'\nimport { reviewService } from '../services/review.service'\nimport { userService } from '../services/user.service'\n\n// Action Creators\nexport function getActionRemoveReview(reviewId) {\n  return { type: 'REMOVE_REVIEW', reviewId }\n}\nexport function getActionAddReview(review) {\n  return { type: 'ADD_REVIEW', review }\n}\nexport function getActionSetWatchedUser(user) {\n  return { type: 'SET_WATCHED_USER', user }\n}\n\nexport function loadReviews() {\n  return async dispatch => {\n    try {\n      const reviews = await reviewService.query()\n      dispatch({ type: 'SET_REVIEWS', reviews })\n\n    } catch (err) {\n      console.log('ReviewActions: err in loadReviews', err)\n    }\n  }\n}\n\nexport function addReview(review) {\n  return async dispatch => {\n    try {\n      const addedReview = await reviewService.add(review)\n      dispatch(getActionAddReview(addedReview))\n\n      // Change the score in user kept in sessionStorage\n      // userService.saveLocalUser(addedReview.byUser)\n      // const { score } = addedReview.byUser\n      // dispatch({ type: 'SET_SCORE', score })\n\n    } catch (err) {\n      console.log('ReviewActions: err in addReview', err)\n      throw err\n    }\n  }\n}\n\nexport function removeReview(reviewId) {\n  return async dispatch => {\n    try {\n      await reviewService.remove(reviewId)\n      dispatch(getActionRemoveReview(reviewId))\n    } catch (err) {\n      console.log('ReviewActions: err in removeReview', err)\n      throw err\n    }\n  }\n}\n","/Users/davidlaufer/sprint4/src/services/async-storage.service.js",[],"/Users/davidlaufer/sprint4/src/services/event-bus.service.js",[],"/Users/davidlaufer/sprint4/src/pages/add-edit-stay.jsx",["190","191"],"// import { upload } from '@testing-library/user-event/dist/upload'\nimport { useEffect, useRef } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { useFormRegister } from '../hooks/useFormRegister'\nimport { addStay, updateStay } from '../store/stay.actions'\n\n\nexport const StayEdit = () => {\n\n    const params = useParams()\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n\n    const [register, setStay, stay] = useFormRegister({\n        name: '',\n        price: ''\n        // img: null\n    })\n\n    const inputRef = useRef()\n\n    useEffect(() => {\n        inputRef.current.focus()\n        const stayId = params.stayId\n        if (!stayId) return\n        // stayService\n        //     .getById(stayId)\n        //     .then((stay) => {\n        //         setStay(stay)\n        //     })\n        //     .catch((err) => {\n        //         console.log('err:', err)\n        //     })\n    }, [])\n\n    const onSaveStay = (ev) => {\n        ev.preventDefault()\n        if (stay._id) {\n            try {\n                dispatch(updateStay(stay))\n                navigate('/')\n            } catch (err) {\n                console.error('ERROR!', err)\n            }\n        } else {\n            try {\n                dispatch(addStay(stay))\n                navigate('/')\n            } catch (err) {\n                console.error('ERROR!', err)\n            }\n        }\n\n    }\n\n    return (\n        <form onSubmit={onSaveStay}>\n            <h1>{stay._id ? 'Edit' : 'Add'} stay</h1>\n\n            <label htmlFor=\"name\">name</label>\n            <input ref={inputRef} {...register('name', 'text')} />\n\n            <label htmlFor=\"price\">Price</label>\n            <input {...register('price', 'number')} />\n            <button>submit</button>\n        </form>\n    )\n}","/Users/davidlaufer/sprint4/src/pages/reserve-summary.jsx",[],["192","193"],"/Users/davidlaufer/sprint4/src/pages/stay-details.jsx",["194","195"],"import { useEffect, useLayoutEffect, useRef } from \"react\"\nimport { useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { Calender } from \"../cmps/calender\"\nimport { Reserve } from \"../cmps/reserve\"\nimport { stayService } from \"../services/stay.service\"\nimport { Review } from \"../cmps/stay-review\"\nimport { DetailsHeader } from \"../cmps/details-header\"\nimport { StayKeys } from \"../cmps/stayDetails/stay-keys\"\nimport { AirCover } from \"../cmps/stayDetails/stay-air-cover\"\nimport { Amenities } from \"../cmps/stayDetails/stay-amenities\"\n\nimport { ReactComponent as Star } from '../assets/icons/star.svg';\nimport { ReactComponent as Heart } from '../assets/icons/heart.svg';\nimport { ReactComponent as Share } from '../assets/icons/share.svg';\nimport { ReactComponent as User } from '../assets/icons/user.svg';\n\nexport const StayDetails = () => {\n\n    const [stay, setStay] = useState(null)\n    const [isOpen, setIsOpen] = useState(false)\n\n    const params = useParams()\n\n    const imgSection = useRef(null)\n    const amenitiesSection = useRef(null)\n    const reviewsSection = useRef(null)\n    const startPhotos = useRef(null)\n\n    const loadStay = () => {\n        const stayId = params.id\n        stayService.getById(stayId).then((stay) => {\n            console.log('stay:', stay)\n            setStay(stay)\n            // setReviews(reviews)\n        })\n    }\n\n\n    useEffect(() => {\n        loadStay()\n    }, [])\n\n    useLayoutEffect(() => {\n        console.log(imgSection.current, 'asdasdas')\n        if (!imgSection.current) return\n        const imgObserver = new IntersectionObserver(onImgObserver, {\n            rootMargin: \"2px 0px 0px\",\n        });\n        imgObserver.observe(imgSection.current)\n\n        function onImgObserver(entries) {\n            console.log(entries, isOpen, imgSection)\n            if (!imgSection.current) return\n            entries.forEach((entry) => {\n                console.log(entry)\n                setIsOpen(!entry.isIntersecting)\n            })\n        }\n    }, [stay])\n\n    const avgRate = () => {\n        return stayService.avgRate(stay)\n    }\n\n\n    if (!stay) return <div>Loading...</div>\n    const rate = avgRate()\n\n    return <div className=\"stay-details\">\n        {(isOpen) ? <DetailsHeader myRef={{ amenitiesSection, reviewsSection, startPhotos }} stay={stay} /> : ''}\n\n        <div className=\"header-details\" ref={startPhotos}>\n            <h1>{stay.name}</h1>\n            <div className=\"mini-details\">\n                <div className=\"mini-info\">\n                    <span className=\"rate-star\"><Star /> {rate} &middot;</span>\n\n                    <button className=\"review-amount\">{stay.reviews.length} reviews</button>\n                    <span className=\"separate-dot\">&middot;</span>\n                    <span className=\"country-code\">{stay.loc.city},{stay.loc.countryCode},{stay.loc.country}</span>\n                </div>\n                <div className=\"details-actions\">\n                    <div className=\"share-details\"><button href=\"#\"><span><Share /></span>Share</button></div>\n                    <div className=\"save-details\"><button href=\"#\"><span><Heart /></span> Save</button></div>\n                </div>\n            </div>\n        </div>\n\n\n        <div className=\"img-details\" ref={imgSection} id=\"img-details\">\n            {stay.imgUrls.map((imgUrl, index) => <img className={`img-${index}`} src={`${stay.imgUrls[index]}`} alt=\"\" srcSet=\"\" key={index} />)}\n        </div>\n\n        <div className=\"main-details\">\n            <div className=\"details-section\">\n                <div className=\"mini-details\">\n                    <div className=\"stay-details\">\n                        <h2>{stay.roomType} hosted by {stay.host.fullname}</h2>\n                        <ol>\n                            <li>\n                                <span>{stay.capacity} guests</span>\n                                <span> &middot;</span>\n                            </li>\n                            <li>\n                                <span>{stay.bathrooms} bathrooms</span>\n                                <span> &middot;</span>\n                            </li>\n                            <li>\n                                <span>{stay.bedrooms} bedrooms</span>\n                            </li>\n\n                        </ol>\n                    </div>\n                    <div className=\"user-photo\"><User /></div>\n                </div>\n\n                <StayKeys />\n\n                <AirCover />\n\n                <div className=\"more-description\">\n                    <div className=\"summary\">{stay.summary}</div>\n                    <button className=\"show-more\">Show more </button>\n                </div>\n\n                <div ref={amenitiesSection}></div>\n                <Amenities stay={stay} />\n\n                <Calender stay={stay} />\n\n            </div>\n\n            <Reserve stay={stay} avgRate={rate} />\n        </div>\n\n        <div ref={reviewsSection}></div>\n        <div className=\"reviews-section\"  >\n\n            <Review stay={stay} avgRate={rate} />\n\n        </div>\n    </div>\n\n\n}","/Users/davidlaufer/sprint4/src/cmps/header-filter.jsx",["196","197"],"import { useLocation, useParams } from 'react-router-dom'\nimport search from '../assets/img/search-icon.png'\n\nexport function HeaderFilter({ onFilterClicked }) {\n    const pathname = useLocation().pathname\n\n    const checkIn = pathname.slice(1, 11)\n    const checkOut = pathname.slice(12, 22)\n    console.log('checkIn, checkOut:', checkIn, checkOut)\n\n    const checkIndDate = new Date(checkIn)\n    const checkOutDate = new Date(checkOut)\n\n    const checkInMonth = checkIndDate.toLocaleString('en-US', { month: 'short' })\n    const checkOutInMonth = checkOutDate.toLocaleString('en-US', { month: 'short' })\n\n    return (\n        <section className=\"header-filter\">\n            <div className='filter-contaner'>\n                <button className='header-btn' onClick={onFilterClicked}>Anywhere</button>\n                <span></span>\n                <button className='header-btn' onClick={onFilterClicked}>\n                    {checkIn && checkOut ? <p > {checkInMonth} {checkIndDate.getDate()} - {checkOutInMonth} {checkOutDate.getDate()} </p> : <p> Any week</p>}\n                </button>\n                <span></span>\n                <button className='header-btn search-last-btn' onClick={onFilterClicked}>Add guests</button>\n                <button className='search-btn ' onClick={onFilterClicked}><img src={search} /></button>\n            </div>\n        </section>\n    )\n}","/Users/davidlaufer/sprint4/src/cmps/header-profile.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/expanded-filter.jsx",[],"/Users/davidlaufer/sprint4/src/services/review.service.js",["198"],"// import { httpService } from './http.service'\nimport { storageService } from './async-storage.service'\n// import { socketService, SOCKET_EVENT_REVIEW_ADDED, SOCKET_EVENT_REVIEW_ABOUT_YOU } from './socket.service'\nimport { getActionRemoveReview, getActionAddReview } from '../store/review.actions'\n\nconst reviewChannel = new BroadcastChannel('reviewChannel')\n\n// ;(() => {\n//   reviewChannel.addEventListener('message', (ev) => {\n//     store.dispatch(ev.data)\n//   })\n//   socketService.on(SOCKET_EVENT_REVIEW_ADDED, (review) => {\n//     console.log('GOT from socket', review)\n//     store.dispatch(getActionAddReview(review))\n//   })\n//   socketService.on(SOCKET_EVENT_REVIEW_ABOUT_YOU, (review) => {\n//     showSuccessMsg(`New review about me ${review.txt}`)\n//   })\n// })()\n\n\n\nexport const reviewService = {\n  add,\n  query,\n  remove\n}\n\n\nfunction query(filterBy) {\n  var queryStr = (!filterBy) ? '' : `?name=${filterBy.name}&sort=anaAref`\n  // return httpService.get(`review${queryStr}`)\n  return storageService.query('review')\n}\n\nasync function remove(reviewId) {\n  // await httpService.delete(`review/${reviewId}`)\n  await storageService.remove('review', reviewId)\n  reviewChannel.postMessage(getActionRemoveReview(reviewId))\n\n\n}\nasync function add(review) {\n  // const addedReview = await httpService.post(`review`, review)\n\n  // review.byUser = userService.getLoggedinUser()\n  // review.aboutUser = await userService.getById(review.aboutUserId)\n  const addedReview = await storageService.post('review', review)\n\n  reviewChannel.postMessage(getActionAddReview(addedReview))\n\n  return addedReview\n}\n\n// This way, we can also subscribe to none-store data change\n// function subscribe(listener) {\n//   reviewChannel.addEventListener('message', listener)\n// }\n// function unsubscribe(listener) {\n//   reviewChannel.removeEventListener('message', listener)\n// }\n","/Users/davidlaufer/sprint4/src/services/stay.service.js",[],"/Users/davidlaufer/sprint4/src/store/stay.actions.js",[],"/Users/davidlaufer/sprint4/src/hooks/useFormRegister.js",["199"],"import { useEffect, useState } from \"react\"\nimport { useEffectUpdate } from \"./useEffectUpdate\"\n\nexport const useFormRegister = (initialState, callBack) => {\n\n    const [fields, setFields] = useState(initialState)\n\n    useEffectUpdate(() => {\n        if (callBack) callBack(fields)\n    }, [fields])\n\n    const handleChange = ({ target }) => {\n        const field = target.name\n        let value = target.value\n\n        switch (target.type) {\n            case 'number':\n            case 'range':\n                value = +target.value || ''\n                break;\n            case 'checkbox':\n                value = target.checked\n                break;\n            case 'date':\n                value = new Date(value)\n                break;\n            case 'time':\n                const newDate = new Date()\n                const hours = value.split(':')[0]\n                const minutes = value.split(':')[1]\n                newDate.setHours(hours)\n                newDate.setMinutes(minutes)\n                value = newDate\n                break\n            default:\n                break\n        }\n        setFields(prevFields => ({ ...prevFields, [field]: value }))\n    }\n\n    const getFormattedDate = (value) => {\n        const valueDate = new Date(value)\n        return `${valueDate.getFullYear()}-${(valueDate.getMonth() + 1 + '').padStart(2, '0')}-${(valueDate.getDate() + '').padStart(2, '0')}`\n    }\n    const getFormattedTime = (value) => {\n        const valueTime = new Date(value)\n        return `${(valueTime.getHours() + '').padStart(2, '0')}:${(valueTime.getMinutes() + '').padStart(2, '0')}`\n    }\n    const register = (field, type = '', value) => { // value only used when type === 'radio'\n        const inputProp = {\n            onChange: handleChange,\n            name: field,\n            id: field,\n            value: fields[field],\n            type\n        }\n        if (type === 'checkbox') inputProp.checked = fields[field]\n        if (type === 'date') inputProp.value = getFormattedDate(fields[field])\n        if (type === 'time') inputProp.value = getFormattedTime(fields[field])\n        if (type === 'radio') {\n            inputProp.value = value\n            inputProp.id = value\n            inputProp.checked = fields[field] === value\n        }\n        return inputProp\n    }\n    return [register, setFields, fields]\n}","/Users/davidlaufer/sprint4/src/cmps/stay-list.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/calender.jsx",["200","201"],"/Users/davidlaufer/sprint4/src/cmps/stay-review.jsx",[],"/Users/davidlaufer/sprint4/src/services/util.service.js",[],"/Users/davidlaufer/sprint4/src/hooks/useEffectUpdate.js",["202","203"],"import { useEffect, useRef } from \"react\"\n\nexport const useEffectUpdate = (callBack, dependencies) => {\n    \n    const isFirst = useRef(true)\n\n    useEffect(()=>{\n        if (isFirst.current) {\n            isFirst.current = false\n            return\n        }   \n        callBack()\n    }, dependencies)\n    \n}","/Users/davidlaufer/sprint4/src/store/order.actions.js",[],"/Users/davidlaufer/sprint4/src/services/order.service.js",[],"/Users/davidlaufer/sprint4/src/cmps/stay-preview.jsx",["204"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport function StayPreview({ stay }) {\n    const params = useParams()\n    const { checkIn, checkOut } = params\n\n    // const checkIndDate = new Date(checkIn)\n    // const checkOutDate = new Date(checkOut)\n\n    // const checkInMonth = checkIndDate.toLocaleString('en-US', { month: 'short' })\n    // const checkOutInMonth = checkOutDate.toLocaleString('en-US', { month: 'short' })\n\n    // let isSameMonth = false\n\n    // if (checkIn && checkOut && checkInMonth === checkOutInMonth) isSameMonth = true\n\n    // console.log('checkIn:', checkIn)\n    // console.log('checkOut:', checkOut)\n    // console.log('checkInMonth:', checkInMonth)\n    // console.log('checkOutInMonth:', checkOutInMonth)\n    // console.log('isSameMonth:', isSameMonth)\n\n    return (\n        <div key={stay._id} className='stay-preview'>\n            <img src={stay.imgUrls[0]} />\n            <div>\n                <p><span>{stay.loc.city}, {stay.loc.country}</span></p>\n                {!checkIn && !checkOut && <p>{stay.loc.address}, {stay.loc.city}</p>}\n                {checkIn && checkOut && <p>{stay.summary.slice(0,30)}...</p>}\n                {checkIn && checkOut && <p>{stay.beds} beds</p>}\n                {/* {isSameMonth  && <p > {checkInMonth} {checkIndDate.getDate()} - {checkOutDate.getDate()} </p>} */}\n                <p className=\"price\"><span>${stay.price}</span> night</p>\n            </div>\n        </div>\n    )\n}","/Users/davidlaufer/sprint4/src/cmps/calc-reserve.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/main-header.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/details-header.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/stayDetails/stay-keys.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/stayDetails/stay-air-cover.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/stayDetails/stay-amenities.jsx",[],"/Users/davidlaufer/sprint4/src/cmps/reserve.jsx",["205","206"],"import { useState } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { useSelector } from \"react-redux\"\nimport { Link, useNavigate } from \"react-router-dom\"\nimport { saveOrder } from \"../store/order.actions\"\nimport { ReactComponent as Star } from '../assets/icons/star.svg';\nimport { CalcReserve } from \"./calc-reserve\"\nimport { ReactComponent as Plus } from '../assets/img/vector/plus.svg';\nimport { ReactComponent as Minus } from '../assets/img/vector/minus.svg';\n\n\nexport const Reserve = ({ stay, avgRate }) => {\n\n    let { order } = useSelector(state => state.orderModule)\n    const [isOpen, setIsOpen] = useState(false)\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const [guestsCount, setGuestsCount] = useState({\n        adults: 0,\n        children: 0,\n        infants: 0,\n        pets: 0,\n    })\n\n    const toggleMenu = () => {\n        setIsOpen(!isOpen)\n    }\n\n    const onClick = (category, action) => {\n        action = action === '+' ? 1 : -1\n        if (guestsCount[category] + action < 0 || action > stay.capacity) return\n        guestsCount[category] += action\n        setGuestsCount(prevGuestsCount => ({ ...prevGuestsCount }))\n        console.log(guestsCount)\n    }\n\n    const submitReserve = () => {\n        const guests = guestsCount\n        const currOrder = { ...order, guests }\n        dispatch(saveOrder(currOrder))\n        navigate(\"/summary\", {\n            state: {\n                stay,\n                order\n            },\n        });\n    }\n\n    const mouseMove = (e) => {\n        const rect = e.target.getBoundingClientRect();\n        const mouseX = e.pageX - e.currentTarget.offsetLeft;\n        const mouseY = e.pageY - e.currentTarget.offsetTop;\n        e.currentTarget.style.cssText = `\n    --mouse-x: ${mouseX}; \n    --mouse-y: ${mouseY};\n  `;\n    }\n\n\n\n    return (\n        <div className=\"reserve-section\" >\n            <div className=\"reserve-form\">\n                <div className=\"reserve\">\n                    <div className=\"reserve-form\">\n                        <div className=\"reserve-header\">\n                            <div>\n                                <div><span className=\"price\">${stay.price}</span><span> night</span></div>\n                            </div>\n                            <div className=\"reserve-rate\">\n                                <div className=\"reserve-star\"><span className=\"star\"><Star /></span><span className=\"avg-rate\"> {avgRate} &middot;</span></div>\n                                <button className=\"reserve-reviews\"><div>{stay.reviews.length} reviews</div></button>\n                            </div>\n                        </div>\n\n                        <div className=\"reserve-info\">\n                            <div className=\"pick-dates\">\n                                <div className=\"dates-first-layer\">\n                                    <div className=\"dates-second-layer\">\n                                        <button className=\"reserve-dates\">\n                                            <div className=\"check-in\">\n                                                <div className=\"txt-reserve\">Check-in</div>\n                                                <div className=\"date-reserve\">{order.startDate}</div>\n                                            </div>\n                                            <div className=\"check-out\">\n                                                <div className=\"txt-reserve\">Check-out</div>\n                                                <div className=\"date-reserve\">{order.endDate}</div>\n                                            </div>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"guest-info\">\n                                <div className=\"guest-first-layer\">\n                                    <div className=\"guest-details-layer\">\n                                        <div className=\"guest-final-details\">\n                                            <button className=\"guests-details\" onClick={() => toggleMenu()}>\n                                                <div className=\"title\">Guests</div>\n                                                <div className=\"guest-section\">\n                                                    <div className=\"guest-description\">\n                                                        {guestsCount.adults + guestsCount.children} guest\n                                                        {(guestsCount.infants) ? ',' + guestsCount.infants + 'infants' : ''}\n                                                        {(guestsCount.pets) ? ',' + guestsCount.pets + 'pets' : ''}\n                                                    </div>\n                                                </div>\n\n                                            </button>\n                                        </div>\n                                        {isOpen &&\n\n                                            <div className=\"select-guests\">\n                                                <div className=\"pick-guest-account\">\n                                                    <div>\n                                                        <h3>Adults</h3>\n                                                        <h5>Age 13+</h5>\n                                                    </div>\n                                                    <div className=\"choose-amount\">\n                                                        <div>\n                                                        <button onClick={() => onClick('adults', '-')}><Minus/></button>\n                                                            <span>{guestsCount.adults}</span>\n                                                            <button onClick={() => onClick('adults', '+')}><Plus/></button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"pick-guest-account\">\n                                                    <div>\n                                                        <h3>Children</h3>\n                                                        <h5>Ages 2-12</h5>\n                                                    </div>\n                                                    <div className=\"choose-amount\">\n                                                        <div>\n                                                            <button onClick={() => onClick('children', '-')}><Minus/></button>\n                                                            <span>{guestsCount.children}</span>\n                                                            <button onClick={() => onClick('children', '+')}><Plus/></button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"pick-guest-account\">\n                                                    <div>\n                                                        <h3>Infants</h3>\n                                                        <h5>Under 2</h5>\n                                                    </div>\n                                                    <div className=\"choose-amount\">\n                                                        <div>\n                                                            <button onClick={() => onClick('infants', '-')}><Minus/></button>\n                                                            <span>{guestsCount.infants}</span>\n                                                            <button onClick={() => onClick('infants', '+')}><Plus/></button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"pick-guest-account\">\n                                                    <div>\n                                                        <h3>Pets</h3>\n                                                    </div>\n                                                    <div className=\"choose-amount\">\n                                                        <div>\n                                                            <button onClick={() => onClick('pets', '-')}><Minus/></button>\n                                                            <span>{guestsCount.pets}</span>\n                                                            <button onClick={() => onClick('pets', '+')}><Plus/></button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <button onClick={() => toggleMenu()}>close</button>\n                                            </div>\n                                        }\n                                    </div>\n\n                                </div>\n\n\n                            </div>\n                        </div>\n\n                        <div className=\"reserve-btn-section\">\n                            {/* <Link to={{ pathname: \"/summary/\", state: {order: order}}}> */}\n                            <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100\" onClick={() => submitReserve()}>\n                                <button onMouseMove={(e) => mouseMove(e)} id=\"gradientBtn\">\n                                    <span className=\"absolute inset-0 gradient opacity-0 transition-opacity duration-300\"></span>\n                                    <span className=\"relative z-1 pointer-events-none\">Reserve</span>\n                                </button>\n                            </div>\n\n                            {/* </Link> */}\n                        </div>\n\n                        {order.endDate &&\n                            <section>\n                                <div className=\"msg-txt\">\n                                    <div>You won't be charged yet</div>\n                                </div>\n                                <CalcReserve stay={stay} />\n                            </section>\n                        }\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n    )\n}","/Users/davidlaufer/sprint4/src/pages/stay-app.jsx",["207"],"import React, { useEffect } from 'react'\n// import { connect } from 'react-redux'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { loadStays, setFilterBy } from '../store/stay.actions'\nimport { StayList } from '../cmps/stay-list'\nimport { StayFilter } from '../cmps/stay-filter'\n// import { stayService } from '../services/stay.service'\n// import {eventBusService } from '../services/event-bus.service'\n\nexport const StayApp = () => {\n    const { stays, isFilterOpen } = useSelector(state => state.stayModule)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(loadStays())\n    }, [])\n\n    const onChangeFilter = (filterBy) => {\n        dispatch(setFilterBy(filterBy))\n        dispatch(loadStays())\n    }\n\n    const onClickFilter = (ev) => {\n        ev.preventDefault()\n        dispatch({\n            type: 'SET_IS_FILTER_OPEN',\n            isFilterOpen: !isFilterOpen\n        })\n        if (!isFilterOpen) dispatch(loadStays())\n    }\n    \n    if (!stays) return <div>Loading...</div>\n    return (\n        <section className={isFilterOpen ? 'filter-open bnb-app full main-layout ' : 'bnb-app full main-layout '}>\n            <div onClick={onClickFilter} className='main-screen' ></div>\n            <StayFilter isFilterOpen={isFilterOpen} onChangeFilter={onChangeFilter} onClickFilter={onClickFilter} />\n            <StayList stays={stays} />\n        </section>\n    )\n}","/Users/davidlaufer/sprint4/src/cmps/header-expanded-filter.jsx",["208"],"import { useDispatch } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport search from '../assets/img/search-icon.png'\nimport { useFormRegister } from '../hooks/useFormRegister'\n// import { saveDates } from '../store/order.actions'\nimport { loadStays, setFilterBy } from '../store/stay.actions'\nimport {  format } from 'date-fns'\n\n\nexport function HeaderExpandedFilter({ onFilterClicked }) {\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const onChangeFilter = (filterBy) => {\n        dispatch(setFilterBy(filterBy))\n        dispatch(loadStays())\n    }\n\n    const [register, setFilter, filterBy] = useFormRegister({\n        where: '',\n        checkIn: '',\n        checkOut: '',\n        who: ''\n    }, onChangeFilter)\n\n    const onClickFilter = () => {\n        // if (filterBy.checkIn && filterBy.checkOut) {\n        //     dispatch(saveDates('', filterBy.checkIn, filterBy.checkOut))\n        // }\n        onFilterClicked()\n        const checkIn = format(new Date(filterBy.checkIn), 'yyyy-MM-dd') \n        const checkOut = format(new Date(filterBy.checkOut), 'yyyy-MM-dd') \n        // console.log('checkIn:', checkIn)\n        // navigate('/')\n        navigate(`/${checkIn}/${checkOut}`)\n    }\n\n    // console.log('filterBy:', filterBy)\n    return (\n        <section className=\"header-filter \">\n            <div className='header-expanded-filter'>\n                <div className=\"where-filter\">\n                    <label htmlFor=\"\">where</label>\n                    {/* <p>where</p> */}\n                    {/* <span>Search destination</span> */}\n                    <input className='filter-input' placeholder='Search destination' {...register('where', 'text')} />\n                </div>\n                <span></span>\n                {/* <div className=\"when-filter\"> */}\n                <div className=\"check-in\">\n                    <p>check in</p>\n                    {/* <span>Add dates</span> */}\n                    <input className='filter-input' {...register('checkIn', 'date')} />\n                </div>\n                <span></span>\n                <div className=\"check-out\">\n                    <p> check out</p>\n                    {/* <span>Add dates</span> */}\n                    {/* <input className='filter-input' type=\"date\" placeholder='Add dates' /> */}\n                    <input className='filter-input' {...register('checkOut', 'date')} />\n                </div>\n                {/* </div> */}\n                <span></span>\n                <div className=\"who-filter\">\n                    <p>who</p>\n                    <span>Add guests</span>\n                </div>\n                <button className=\"expanded-search-btn\" onClick={onClickFilter}>\n                    <div>\n                        <img src={search} alt= \"\"/>\n                        <p>search </p>\n                    </div>\n                </button>\n            </div>\n        </section>\n\n    )\n}",{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":3,"column":10,"nodeType":"215","messageId":"216","endLine":3,"endColumn":33},{"ruleId":"213","severity":1,"message":"217","line":30,"column":10,"nodeType":"215","messageId":"216","endLine":30,"endColumn":22},{"ruleId":"213","severity":1,"message":"218","line":1,"column":10,"nodeType":"215","messageId":"216","endLine":1,"endColumn":24},{"ruleId":"213","severity":1,"message":"219","line":3,"column":10,"nodeType":"215","messageId":"216","endLine":3,"endColumn":21},{"ruleId":"213","severity":1,"message":"220","line":16,"column":22,"nodeType":"215","messageId":"216","endLine":16,"endColumn":29},{"ruleId":"221","severity":1,"message":"222","line":36,"column":8,"nodeType":"223","endLine":36,"endColumn":10,"suggestions":"224"},{"ruleId":"209","replacedBy":"225"},{"ruleId":"211","replacedBy":"226"},{"ruleId":"221","severity":1,"message":"227","line":42,"column":8,"nodeType":"223","endLine":42,"endColumn":10,"suggestions":"228"},{"ruleId":"221","severity":1,"message":"229","line":60,"column":8,"nodeType":"223","endLine":60,"endColumn":14,"suggestions":"230"},{"ruleId":"213","severity":1,"message":"231","line":1,"column":23,"nodeType":"215","messageId":"216","endLine":1,"endColumn":32},{"ruleId":"232","severity":1,"message":"233","line":27,"column":75,"nodeType":"234","endLine":27,"endColumn":95},{"ruleId":"213","severity":1,"message":"235","line":31,"column":7,"nodeType":"215","messageId":"216","endLine":31,"endColumn":15},{"ruleId":"213","severity":1,"message":"236","line":1,"column":10,"nodeType":"215","messageId":"216","endLine":1,"endColumn":19},{"ruleId":"213","severity":1,"message":"237","line":8,"column":10,"nodeType":"215","messageId":"216","endLine":8,"endColumn":23},{"ruleId":"213","severity":1,"message":"238","line":8,"column":25,"nodeType":"215","messageId":"216","endLine":8,"endColumn":36},{"ruleId":"221","severity":1,"message":"239","line":13,"column":8,"nodeType":"215","endLine":13,"endColumn":20},{"ruleId":"221","severity":1,"message":"240","line":13,"column":8,"nodeType":"215","endLine":13,"endColumn":20,"suggestions":"241"},{"ruleId":"232","severity":1,"message":"233","line":26,"column":13,"nodeType":"234","endLine":26,"endColumn":42},{"ruleId":"213","severity":1,"message":"242","line":4,"column":10,"nodeType":"215","messageId":"216","endLine":4,"endColumn":14},{"ruleId":"213","severity":1,"message":"243","line":51,"column":15,"nodeType":"215","messageId":"216","endLine":51,"endColumn":19},{"ruleId":"221","severity":1,"message":"244","line":16,"column":8,"nodeType":"223","endLine":16,"endColumn":10,"suggestions":"245"},{"ruleId":"213","severity":1,"message":"246","line":19,"column":22,"nodeType":"215","messageId":"216","endLine":19,"endColumn":31},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"no-unused-vars","'getActionSetWatchedUser' is defined but never used.","Identifier","unusedVar","'onUserUpdate' is defined but never used.","'showSuccessMsg' is defined but never used.","'userService' is defined but never used.","'setStay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.stayId'. Either include it or remove the dependency array.","ArrayExpression",["249"],["247"],["248"],"React Hook useEffect has a missing dependency: 'loadStay'. Either include it or remove the dependency array.",["250"],"React Hook useLayoutEffect has a missing dependency: 'isOpen'. Either include it or remove the dependency array.",["251"],"'useParams' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'queryStr' is assigned a value but never used.","'useEffect' is defined but never used.","'ThemeProvider' is defined but never used.","'createTheme' is defined but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array. If 'callBack' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["252"],"'Link' is defined but never used.","'rect' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["253"],"'setFilter' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},"Update the dependencies array to be: [params.stayId]",{"range":"264","text":"265"},"Update the dependencies array to be: [loadStay]",{"range":"266","text":"267"},"Update the dependencies array to be: [isOpen, stay]",{"range":"268","text":"269"},"Update the dependencies array to be: [callBack]",{"range":"270","text":"271"},"Update the dependencies array to be: [dispatch]",{"range":"272","text":"273"},[980,982],"[params.stayId]",[1432,1434],"[loadStay]",[2023,2029],"[isOpen, stay]",[288,300],"[callBack]",[620,622],"[dispatch]"]