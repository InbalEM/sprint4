[{"C:\\Cooding Accademy\\sprint4\\sprint4\\src\\index.js":"1","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\redux\\store.js":"2","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\root-cmp.jsx":"3","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\redux\\Slice.js":"4","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\routes.js":"5","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\cmp\\app-footer.jsx":"6","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\store\\bnb.actions.js":"7","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\services\\bnb.service.js":"8","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\services\\event-bus.service.js":"9","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\services\\user.service.js":"10","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\services\\async-storage.service.js":"11","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\services\\util.service.js":"12","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\store\\store.js":"13","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\store\\review.actions.js":"14","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\services\\socket.service.js":"15","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\store\\bnb.reducer.js":"16","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\store\\user.reducer.js":"17","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\store\\system.reducer.js":"18","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\store\\review.reducer.js":"19","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\services\\review.service.js":"20","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\cmp\\app-header.jsx":"21","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\store\\user.actions.js":"22"},{"size":813,"mtime":1663187308001,"results":"23","hashOfConfig":"24"},{"size":251,"mtime":1663173785898,"results":"25","hashOfConfig":"24"},{"size":562,"mtime":1663186664927,"results":"26","hashOfConfig":"24"},{"size":714,"mtime":1663173785897,"results":"27","hashOfConfig":"24"},{"size":784,"mtime":1663176948105,"results":"28","hashOfConfig":"24"},{"size":2006,"mtime":1663186073219,"results":"29","hashOfConfig":"24"},{"size":3961,"mtime":1663177375440,"results":"30","hashOfConfig":"24"},{"size":1824,"mtime":1663176948106,"results":"31","hashOfConfig":"24"},{"size":1282,"mtime":1663173785904,"results":"32","hashOfConfig":"24"},{"size":3351,"mtime":1663173785908,"results":"33","hashOfConfig":"24"},{"size":2156,"mtime":1663173785901,"results":"34","hashOfConfig":"24"},{"size":1294,"mtime":1663173785908,"results":"35","hashOfConfig":"24"},{"size":1027,"mtime":1663174366350,"results":"36","hashOfConfig":"24"},{"size":1572,"mtime":1663173785910,"results":"37","hashOfConfig":"24"},{"size":2899,"mtime":1663185912194,"results":"38","hashOfConfig":"24"},{"size":1698,"mtime":1663177406926,"results":"39","hashOfConfig":"24"},{"size":1440,"mtime":1663173785913,"results":"40","hashOfConfig":"24"},{"size":322,"mtime":1663173785912,"results":"41","hashOfConfig":"24"},{"size":669,"mtime":1663173785911,"results":"42","hashOfConfig":"24"},{"size":2030,"mtime":1663173785906,"results":"43","hashOfConfig":"24"},{"size":1750,"mtime":1663174815624,"results":"44","hashOfConfig":"24"},{"size":2328,"mtime":1663173785912,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"az9pum",{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Cooding Accademy\\sprint4\\sprint4\\src\\index.js",[],"C:\\Cooding Accademy\\sprint4\\sprint4\\src\\redux\\store.js",[],["97","98"],"C:\\Cooding Accademy\\sprint4\\sprint4\\src\\root-cmp.jsx",[],"C:\\Cooding Accademy\\sprint4\\sprint4\\src\\redux\\Slice.js",[],"C:\\Cooding Accademy\\sprint4\\sprint4\\src\\routes.js",[],"C:\\Cooding Accademy\\sprint4\\sprint4\\src\\cmp\\app-footer.jsx",["99"],"\r\nimport React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { removeFromBnbt, checkout } from '../store/bnb.actions'\r\n// import { UserMsg } from './user-msg.jsx'\r\n\r\nfunction _AppFooter({ count, bnbt, removeFromBnbt, checkout }) {\r\n    const [isBnbtShown, setIsBnbtShown] = useState(false)\r\n\r\n\r\n    function getBnbtTotal() {\r\n        return bnbt.reduce((acc, bnb) => acc + bnb.price, 0)\r\n    }\r\n\r\n    return (\r\n        <footer className=\"app-footer\">\r\n            <p>\r\n                coffeerights - count: {count}\r\n            </p>\r\n            {bnbt.length > 0 &&\r\n                <h5>\r\n                    <span>{bnbt.length}</span> Products in your Bnbt\r\n                    <button className=\"btn-link\" onClick={(ev) => {\r\n                        ev.preventDefault();\r\n                        setIsBnbtShown(!isBnbtShown)\r\n                    }}>\r\n                        ({(isBnbtShown) ? 'hide' : 'show'})\r\n                    </button>\r\n                </h5>\r\n            }\r\n\r\n            {isBnbtShown && bnbt.length > 0 && <section className=\"bnbt\" >\r\n                <h5>Your Bnbt</h5>\r\n                <ul>\r\n                    {\r\n                        bnbt.map((bnb, idx) => <li key={idx}>\r\n                            <button onClick={() => {\r\n                                removeFromBnbt(bnb._id)\r\n                            }}>x</button>\r\n                            {bnb.vendor}\r\n                        </li>)\r\n                    }\r\n                </ul>\r\n                <p>Total: ${getBnbtTotal().toLocaleString()} </p>\r\n                <button onClick={checkout}>Checkout</button>\r\n            </section>}\r\n            <UserMsg />\r\n        </footer>\r\n    )\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        count: state.userModule.count,\r\n        bnbt: state.bnbModule.bnbt\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    checkout,\r\n    removeFromBnbt\r\n}\r\n\r\nexport const AppFooter = connect(mapStateToProps, mapDispatchToProps)(_AppFooter)",["100","101"],"C:\\Cooding Accademy\\sprint4\\sprint4\\src\\store\\bnb.actions.js",[],"C:\\Cooding Accademy\\sprint4\\sprint4\\src\\services\\bnb.service.js",["102","103","104"],"\r\nimport { storageService } from './async-storage.service.js'\r\nimport { utilService } from './util.service.js'\r\nimport { userService } from './user.service.js'\r\n// import { getActionRemoveBnb, getActionAddBnb, getActionUpdateBnb } from '../store/bnb.actions.js'\r\nimport {store} from '../store/store'\r\n\r\n// This file demonstrates how to use a BroadcastChannel to notify other browser tabs \r\n\r\nconst STORAGE_KEY = 'bnb'\r\nconst bnbChannel = new BroadcastChannel('bnbChannel')\r\n\r\n\r\n;(()=>{\r\n    bnbChannel.addEventListener('message', (ev)=>{\r\n        store.dispatch(ev.data)\r\n    })\r\n})()\r\n\r\nexport const bnbService = {\r\n    query,\r\n    getById,\r\n    save,\r\n    remove,\r\n    getEmptyBnb,\r\n}\r\nwindow.cs = bnbService\r\n\r\n\r\nfunction query(filterBy) {\r\n    return storageService.query(STORAGE_KEY)\r\n}\r\nfunction getById(bnbId) {\r\n    return storageService.get(STORAGE_KEY, bnbId)\r\n    // return axios.get(`/api/bnb/${bnbId}`)\r\n}\r\nasync function remove(bnbId) {\r\n    await storageService.remove(STORAGE_KEY, bnbId)\r\n    bnbChannel.postMessage(getActionRemoveBnb(bnbId))\r\n}\r\nasync function save(bnb) {\r\n    var savedBnb\r\n    if (bnb._id) {\r\n        savedBnb = await storageService.put(STORAGE_KEY, bnb)\r\n        bnbChannel.postMessage(getActionUpdateBnb(savedBnb))\r\n        \r\n    } else {\r\n        // Later, owner is set by the backend\r\n        bnb.owner = userService.getLoggedinUser()\r\n        savedBnb = await storageService.post(STORAGE_KEY, bnb)\r\n        bnbChannel.postMessage(getActionAddBnb(savedBnb))\r\n    }\r\n    return savedBnb\r\n}\r\n\r\nfunction getEmptyBnb() {\r\n    return {\r\n        vendor: 'Susita-' + (Date.now() % 1000),\r\n        price: utilService.getRandomIntInclusive(1000, 9000),\r\n    }\r\n}\r\n\r\n\r\n// TEST DATA\r\n// storageService.post(STORAGE_KEY, {vendor: 'Subali Rahok 2', price: 980}).then(x => console.log(x))\r\n\r\n\r\n\r\n\r\n","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\services\\event-bus.service.js",[],"C:\\Cooding Accademy\\sprint4\\sprint4\\src\\services\\user.service.js",[],"C:\\Cooding Accademy\\sprint4\\sprint4\\src\\services\\async-storage.service.js",[],"C:\\Cooding Accademy\\sprint4\\sprint4\\src\\services\\util.service.js",[],"C:\\Cooding Accademy\\sprint4\\sprint4\\src\\store\\store.js",[],"C:\\Cooding Accademy\\sprint4\\sprint4\\src\\store\\review.actions.js",["105","106"],"import { showSuccessMsg } from '../services/event-bus.service'\r\nimport { reviewService } from '../services/review.service'\r\nimport { userService } from '../services/user.service'\r\n\r\n// Action Creators\r\nexport function getActionRemoveReview(reviewId) {\r\n  return { type: 'REMOVE_REVIEW', reviewId }\r\n}\r\nexport function getActionAddReview(review) {\r\n  return { type: 'ADD_REVIEW', review }\r\n}\r\nexport function getActionSetWatchedUser(user) {\r\n  return { type: 'SET_WATCHED_USER', user }\r\n}\r\n\r\nexport function loadReviews() {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query()\r\n      dispatch({ type: 'SET_REVIEWS', reviews })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review)\r\n      dispatch(getActionAddReview(addedReview))\r\n\r\n      // Change the score in user kept in sessionStorage\r\n      // userService.saveLocalUser(addedReview.byUser)\r\n      // const { score } = addedReview.byUser\r\n      // dispatch({ type: 'SET_SCORE', score })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err)\r\n      throw err\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeReview(reviewId) {\r\n  return async dispatch => {\r\n    try {\r\n      await reviewService.remove(reviewId)\r\n      dispatch(getActionRemoveReview(reviewId))\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in removeReview', err)\r\n      throw err\r\n    }\r\n  }\r\n}\r\n","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\services\\socket.service.js",["107"],"import io from 'socket.io-client'\r\nimport { userService } from './user.service'\r\n\r\nexport const SOCKET_EVENT_ADD_MSG = 'chat-add-msg'\r\nexport const SOCKET_EMIT_SEND_MSG = 'chat-send-msg'\r\nexport const SOCKET_EMIT_SET_TOPIC = 'chat-set-topic'\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch'\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated'\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added'\r\nexport const SOCKET_EVENT_REVIEW_ABOUT_YOU = 'review-about-you'\r\n\r\nconst SOCKET_EMIT_LOGIN = 'set-user-socket'\r\nconst SOCKET_EMIT_LOGOUT = 'unset-user-socket'\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\n// export const socketService = createSocketService()\r\nexport const socketService = createDummySocketService()\r\n\r\n// for debugging from console\r\n// window.socketService = socketService\r\n\r\nsocketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    setup() {\r\n      socket = io(baseUrl)\r\n      setTimeout(()=>{\r\n        const user = userService.getLoggedinUser()\r\n        if (user) this.login(user._id)\r\n      }, 500)\r\n    },\r\n    on(eventName, cb) {\r\n      socket.on(eventName, cb)\r\n    },\r\n    off(eventName, cb = null) {\r\n      if (!socket) return;\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    emit(eventName, data) {\r\n      socket.emit(eventName, data)\r\n    },\r\n    login(userId) {\r\n      socket.emit(SOCKET_EMIT_LOGIN, userId)\r\n    },\r\n    logout() {\r\n      socket.emit(SOCKET_EMIT_LOGOUT)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n    },\r\n\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    login() {   \r\n    },\r\n    logout() {   \r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', { from: 'Someone', txt: 'Aha it worked!' })\r\n    },\r\n  }\r\n  window.listenersMap = listenersMap;\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\n// function cb(x) {console.log('Socket Test - Expected Puk, Actual:', x)}\r\n// socketService.on('baba', cb)\r\n// socketService.on('baba', cb)\r\n// socketService.on('baba', cb)\r\n// socketService.on('mama', cb)\r\n// socketService.emit('baba', 'Puk')\r\n// socketService.off('baba', cb)\r\n","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\store\\bnb.reducer.js",[],"C:\\Cooding Accademy\\sprint4\\sprint4\\src\\store\\user.reducer.js",[],"C:\\Cooding Accademy\\sprint4\\sprint4\\src\\store\\system.reducer.js",[],"C:\\Cooding Accademy\\sprint4\\sprint4\\src\\store\\review.reducer.js",[],"C:\\Cooding Accademy\\sprint4\\sprint4\\src\\services\\review.service.js",["108"],"// import { httpService } from './http.service'\r\nimport { storageService } from './async-storage.service'\r\nimport { userService } from './user.service'\r\nimport { socketService, SOCKET_EVENT_REVIEW_ADDED, SOCKET_EVENT_REVIEW_ABOUT_YOU } from './socket.service'\r\nimport { getActionRemoveReview, getActionAddReview } from '../store/review.actions'\r\nimport { store } from '../store/store'\r\nimport { showSuccessMsg } from '../services/event-bus.service'\r\n\r\nconst reviewChannel = new BroadcastChannel('reviewChannel')\r\n\r\n;(() => {\r\n  reviewChannel.addEventListener('message', (ev) => {\r\n    store.dispatch(ev.data)\r\n  })\r\n  socketService.on(SOCKET_EVENT_REVIEW_ADDED, (review) => {\r\n    console.log('GOT from socket', review)\r\n    store.dispatch(getActionAddReview(review))\r\n  })\r\n  socketService.on(SOCKET_EVENT_REVIEW_ABOUT_YOU, (review) => {\r\n    showSuccessMsg(`New review about me ${review.txt}`)\r\n  })\r\n})()\r\n\r\n\r\n\r\nexport const reviewService = {\r\n  add,\r\n  query,\r\n  remove\r\n}\r\n\r\n\r\nfunction query(filterBy) {\r\n  var queryStr = (!filterBy) ? '' : `?name=${filterBy.name}&sort=anaAref`\r\n  // return httpService.get(`review${queryStr}`)\r\n  return storageService.query('review')\r\n}\r\n\r\nasync function remove(reviewId) {\r\n  // await httpService.delete(`review/${reviewId}`)\r\n  await storageService.remove('review', reviewId)\r\n  reviewChannel.postMessage(getActionRemoveReview(reviewId))\r\n\r\n\r\n}\r\nasync function add(review) {\r\n  // const addedReview = await httpService.post(`review`, review)\r\n\r\n  review.byUser = userService.getLoggedinUser()\r\n  review.aboutUser = await userService.getById(review.aboutUserId)\r\n  const addedReview = await storageService.post('review', review)\r\n\r\n  reviewChannel.postMessage(getActionAddReview(addedReview))\r\n\r\n  return addedReview\r\n}\r\n\r\n// This way, we can also subscribe to none-store data change\r\n// function subscribe(listener) {\r\n//   reviewChannel.addEventListener('message', listener)\r\n// }\r\n// function unsubscribe(listener) {\r\n//   reviewChannel.removeEventListener('message', listener)\r\n// }\r\n","C:\\Cooding Accademy\\sprint4\\sprint4\\src\\cmp\\app-header.jsx",["109"],"C:\\Cooding Accademy\\sprint4\\sprint4\\src\\store\\user.actions.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":2,"message":"115","line":48,"column":14,"nodeType":"116","messageId":"117","endLine":48,"endColumn":21},{"ruleId":"110","replacedBy":"118"},{"ruleId":"112","replacedBy":"119"},{"ruleId":"120","severity":2,"message":"121","line":39,"column":28,"nodeType":"122","messageId":"123","endLine":39,"endColumn":46},{"ruleId":"120","severity":2,"message":"124","line":45,"column":32,"nodeType":"122","messageId":"123","endLine":45,"endColumn":50},{"ruleId":"120","severity":2,"message":"125","line":51,"column":32,"nodeType":"122","messageId":"123","endLine":51,"endColumn":47},{"ruleId":"126","severity":1,"message":"127","line":1,"column":10,"nodeType":"122","messageId":"128","endLine":1,"endColumn":24},{"ruleId":"126","severity":1,"message":"129","line":3,"column":10,"nodeType":"122","messageId":"128","endLine":3,"endColumn":21},{"ruleId":"126","severity":1,"message":"130","line":26,"column":10,"nodeType":"122","messageId":"128","endLine":26,"endColumn":29},{"ruleId":"126","severity":1,"message":"131","line":34,"column":7,"nodeType":"122","messageId":"128","endLine":34,"endColumn":15},{"ruleId":"132","severity":1,"message":"133","line":21,"column":45,"nodeType":"134","endLine":21,"endColumn":70},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"react/jsx-no-undef","'UserMsg' is not defined.","JSXIdentifier","undefined",["135"],["136"],"no-undef","'getActionRemoveBnb' is not defined.","Identifier","undef","'getActionUpdateBnb' is not defined.","'getActionAddBnb' is not defined.","no-unused-vars","'showSuccessMsg' is defined but never used.","unusedVar","'userService' is defined but never used.","'createSocketService' is defined but never used.","'queryStr' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]