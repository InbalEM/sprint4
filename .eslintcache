[{"C:\\dev\\coding-academy\\sprint4\\src\\index.js":"1","C:\\dev\\coding-academy\\sprint4\\src\\store\\store.js":"2","C:\\dev\\coding-academy\\sprint4\\src\\root-cmp.jsx":"3","C:\\dev\\coding-academy\\sprint4\\src\\store\\user.reducer.js":"4","C:\\dev\\coding-academy\\sprint4\\src\\store\\order.reducer.js":"5","C:\\dev\\coding-academy\\sprint4\\src\\store\\stay.reducer.js":"6","C:\\dev\\coding-academy\\sprint4\\src\\store\\review.reducer.js":"7","C:\\dev\\coding-academy\\sprint4\\src\\routes.js":"8","C:\\dev\\coding-academy\\sprint4\\src\\services\\user.service.js":"9","C:\\dev\\coding-academy\\sprint4\\src\\cmps\\app-footer.jsx":"10","C:\\dev\\coding-academy\\sprint4\\src\\cmps\\app-header.jsx":"11","C:\\dev\\coding-academy\\sprint4\\src\\services\\event-bus.service.js":"12","C:\\dev\\coding-academy\\sprint4\\src\\services\\async-storage.service.js":"13","C:\\dev\\coding-academy\\sprint4\\src\\store\\review.actions.js":"14","C:\\dev\\coding-academy\\sprint4\\src\\pages\\add-edit-stay.jsx":"15","C:\\dev\\coding-academy\\sprint4\\src\\pages\\bnb-app.jsx":"16","C:\\dev\\coding-academy\\sprint4\\src\\pages\\stay-details.jsx":"17","C:\\dev\\coding-academy\\sprint4\\src\\cmps\\header-filter.jsx":"18","C:\\dev\\coding-academy\\sprint4\\src\\cmps\\header-profile.jsx":"19","C:\\dev\\coding-academy\\sprint4\\src\\services\\review.service.js":"20","C:\\dev\\coding-academy\\sprint4\\src\\store\\stay.actions.js":"21","C:\\dev\\coding-academy\\sprint4\\src\\services\\stay.service.js":"22","C:\\dev\\coding-academy\\sprint4\\src\\hooks\\useFormRegister.js":"23","C:\\dev\\coding-academy\\sprint4\\src\\cmps\\stay-list.jsx":"24","C:\\dev\\coding-academy\\sprint4\\src\\cmps\\stay-filter.jsx":"25","C:\\dev\\coding-academy\\sprint4\\src\\cmps\\calender.jsx":"26","C:\\dev\\coding-academy\\sprint4\\src\\cmps\\reserve.jsx":"27","C:\\dev\\coding-academy\\sprint4\\src\\services\\util.service.js":"28","C:\\dev\\coding-academy\\sprint4\\src\\hooks\\useEffectUpdate.js":"29","C:\\dev\\coding-academy\\sprint4\\src\\services\\order.service.js":"30","C:\\dev\\coding-academy\\sprint4\\src\\store\\order.actions.js":"31","C:\\dev\\coding-academy\\sprint4\\src\\cmps\\stay-preview.jsx":"32"},{"size":815,"mtime":1663261198080,"results":"33","hashOfConfig":"34"},{"size":1118,"mtime":1663482222225,"results":"35","hashOfConfig":"34"},{"size":714,"mtime":1663484025498,"results":"36","hashOfConfig":"34"},{"size":1440,"mtime":1641996193000,"results":"37","hashOfConfig":"34"},{"size":275,"mtime":1663482222224,"results":"38","hashOfConfig":"34"},{"size":1897,"mtime":1663499675713,"results":"39","hashOfConfig":"34"},{"size":669,"mtime":1641996193000,"results":"40","hashOfConfig":"34"},{"size":480,"mtime":1663482222222,"results":"41","hashOfConfig":"34"},{"size":3281,"mtime":1663226096223,"results":"42","hashOfConfig":"34"},{"size":443,"mtime":1663496926133,"results":"43","hashOfConfig":"34"},{"size":958,"mtime":1663496926134,"results":"44","hashOfConfig":"34"},{"size":1282,"mtime":1641996193000,"results":"45","hashOfConfig":"34"},{"size":2156,"mtime":1663335332680,"results":"46","hashOfConfig":"34"},{"size":1572,"mtime":1663222286981,"results":"47","hashOfConfig":"34"},{"size":1944,"mtime":1663487417632,"results":"48","hashOfConfig":"34"},{"size":1651,"mtime":1663513062341,"results":"49","hashOfConfig":"34"},{"size":3557,"mtime":1663482222221,"results":"50","hashOfConfig":"34"},{"size":115,"mtime":1663482222217,"results":"51","hashOfConfig":"34"},{"size":117,"mtime":1663496926135,"results":"52","hashOfConfig":"34"},{"size":1925,"mtime":1663227042285,"results":"53","hashOfConfig":"34"},{"size":4202,"mtime":1663265001907,"results":"54","hashOfConfig":"34"},{"size":17956,"mtime":1663503530271,"results":"55","hashOfConfig":"34"},{"size":2347,"mtime":1663484988320,"results":"56","hashOfConfig":"34"},{"size":527,"mtime":1663497232703,"results":"57","hashOfConfig":"34"},{"size":1652,"mtime":1663512258392,"results":"58","hashOfConfig":"34"},{"size":1204,"mtime":1663482222216,"results":"59","hashOfConfig":"34"},{"size":5105,"mtime":1663482222219,"results":"60","hashOfConfig":"34"},{"size":1294,"mtime":1641996193000,"results":"61","hashOfConfig":"34"},{"size":308,"mtime":1663438094937,"results":"62","hashOfConfig":"34"},{"size":2050,"mtime":1663482222223,"results":"63","hashOfConfig":"34"},{"size":582,"mtime":1663482222224,"results":"64","hashOfConfig":"34"},{"size":526,"mtime":1663496926136,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1timrjz",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"68"},"C:\\dev\\coding-academy\\sprint4\\src\\index.js",[],["143","144"],"C:\\dev\\coding-academy\\sprint4\\src\\store\\store.js",[],"C:\\dev\\coding-academy\\sprint4\\src\\root-cmp.jsx",[],"C:\\dev\\coding-academy\\sprint4\\src\\store\\user.reducer.js",[],"C:\\dev\\coding-academy\\sprint4\\src\\store\\order.reducer.js",[],"C:\\dev\\coding-academy\\sprint4\\src\\store\\stay.reducer.js",["145","146"],"C:\\dev\\coding-academy\\sprint4\\src\\store\\review.reducer.js",[],"C:\\dev\\coding-academy\\sprint4\\src\\routes.js",[],"C:\\dev\\coding-academy\\sprint4\\src\\services\\user.service.js",["147","148"],"import { storageService } from './async-storage.service'\r\n// import { httpService } from './http.service'\r\nimport { getActionSetWatchedUser } from '../store/review.actions'\r\n// import { socketService, SOCKET_EVENT_USER_UPDATED, SOCKET_EMIT_USER_WATCH } from './socket.service'\r\nimport { showSuccessMsg } from '../services/event-bus.service'\r\n\r\nconst STORAGE_KEY_LOGGEDIN_USER = 'loggedinUser'\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getLoggedinUser,\r\n    saveLocalUser,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    changeScore\r\n}\r\n\r\nwindow.userService = userService\r\n\r\n\r\nfunction getUsers() {\r\n    return storageService.query('user')\r\n    // return httpService.get(`user`)\r\n}\r\n\r\nfunction onUserUpdate(user) {\r\n    showSuccessMsg(`This user ${user.fullname} just got updated from socket, new score: ${user.score}`)\r\n}\r\n\r\nasync function getById(userId) {\r\n    const user = await storageService.get('user', userId)\r\n    // const user = await httpService.get(`user/${userId}`)\r\n\r\n    // socketService.emit(SOCKET_EMIT_USER_WATCH, userId)\r\n    // socketService.off(SOCKET_EVENT_USER_UPDATED, onUserUpdate)\r\n    // socketService.on(SOCKET_EVENT_USER_UPDATED, onUserUpdate)\r\n\r\n    return user\r\n}\r\nfunction remove(userId) {\r\n    return storageService.remove('user', userId)\r\n    // return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    await storageService.put('user', user)\r\n    // user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) saveLocalUser(user)\r\n    return user;\r\n}\r\n\r\nasync function login(userCred) {\r\n    const users = await storageService.query('user')\r\n    const user = users.find(user => user.username === userCred.username)\r\n    // const user = await httpService.post('auth/login', userCred)\r\n    if (user) {\r\n        // socketService.login(user._id)\r\n        return saveLocalUser(user)\r\n    }\r\n}\r\nasync function signup(userCred) {\r\n    userCred.score = 10000;\r\n    const user = await storageService.post('user', userCred)\r\n    // const user = await httpService.post('auth/signup', userCred)\r\n    // socketService.login(user._id)\r\n    return saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.removeItem(STORAGE_KEY_LOGGEDIN_USER)\r\n    // socketService.logout()\r\n    // return await httpService.post('auth/logout')\r\n}\r\n\r\nasync function changeScore(by) {\r\n    const user = getLoggedinUser()\r\n    if (!user) throw new Error('Not loggedin')\r\n    user.score = user.score + by || by\r\n    await update(user)\r\n    return user.score\r\n}\r\n\r\n\r\nfunction saveLocalUser(user) {\r\n    sessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem(STORAGE_KEY_LOGGEDIN_USER))\r\n}\r\n\r\n\r\n// ;(async ()=>{\r\n//     await userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 10000, isAdmin: false})\r\n//     await userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 10000, isAdmin: true})\r\n//     await userService.signup({fullname: 'Muki G', username: 'muki', password:'123', score: 10000})\r\n// })()\r\n\r\n\r\n\r\n","C:\\dev\\coding-academy\\sprint4\\src\\cmps\\app-footer.jsx",[],"C:\\dev\\coding-academy\\sprint4\\src\\cmps\\app-header.jsx",["149"],"import { NavLink, useNavigate } from 'react-router-dom'\r\n\r\nimport { HeaderFilter } from './header-filter'\r\nimport { HeaderProfile } from './header-profile'\r\n\r\nimport logo from '../assets/img/logo48.png'\r\n\r\nexport function AppHeader() {\r\n\r\n    return (\r\n        <header className='app-header full flex'>\r\n            <section className='container flex'>\r\n                <NavLink to='/'>\r\n                    <div className='logo-container flex'>\r\n                        <img src={logo} alt='logo' style={{ maxWidth: '37px' }} />\r\n                        <span>airbnb</span>\r\n                    </div>\r\n                </NavLink>\r\n                <HeaderFilter />\r\n                <div className='flex'>\r\n                <NavLink to='edit'>\r\n                    <span className='become-host-link'>Become a host</span>\r\n                </NavLink>\r\n                <HeaderProfile />\r\n                </div>\r\n            </section>\r\n        </header>\r\n    )\r\n}","C:\\dev\\coding-academy\\sprint4\\src\\services\\event-bus.service.js",[],"C:\\dev\\coding-academy\\sprint4\\src\\services\\async-storage.service.js",[],"C:\\dev\\coding-academy\\sprint4\\src\\store\\review.actions.js",["150","151"],"import { showSuccessMsg } from '../services/event-bus.service'\r\nimport { reviewService } from '../services/review.service'\r\nimport { userService } from '../services/user.service'\r\n\r\n// Action Creators\r\nexport function getActionRemoveReview(reviewId) {\r\n  return { type: 'REMOVE_REVIEW', reviewId }\r\n}\r\nexport function getActionAddReview(review) {\r\n  return { type: 'ADD_REVIEW', review }\r\n}\r\nexport function getActionSetWatchedUser(user) {\r\n  return { type: 'SET_WATCHED_USER', user }\r\n}\r\n\r\nexport function loadReviews() {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query()\r\n      dispatch({ type: 'SET_REVIEWS', reviews })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review)\r\n      dispatch(getActionAddReview(addedReview))\r\n\r\n      // Change the score in user kept in sessionStorage\r\n      // userService.saveLocalUser(addedReview.byUser)\r\n      // const { score } = addedReview.byUser\r\n      // dispatch({ type: 'SET_SCORE', score })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err)\r\n      throw err\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeReview(reviewId) {\r\n  return async dispatch => {\r\n    try {\r\n      await reviewService.remove(reviewId)\r\n      dispatch(getActionRemoveReview(reviewId))\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in removeReview', err)\r\n      throw err\r\n    }\r\n  }\r\n}\r\n","C:\\dev\\coding-academy\\sprint4\\src\\pages\\add-edit-stay.jsx",["152","153","154","155","156"],"// import { upload } from '@testing-library/user-event/dist/upload'\r\nimport { useEffect, useState, useRef } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useFormRegister } from '../hooks/useFormRegister'\r\nimport { addStay, updateStay } from '../store/stay.actions'\r\n\r\n\r\nexport const StayEdit = () => {\r\n\r\n    const params = useParams()\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [register, setStay, stay] = useFormRegister({\r\n        name: '',\r\n        price: ''\r\n        // img: null\r\n    })\r\n\r\n    const inputRef = useRef()\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n        const stayId = params.stayId\r\n        if (!stayId) return\r\n        // stayService\r\n        //     .getById(stayId)\r\n        //     .then((stay) => {\r\n        //         setStay(stay)\r\n        //     })\r\n        //     .catch((err) => {\r\n        //         console.log('err:', err)\r\n        //     })\r\n    }, [])\r\n\r\n    const onSaveStay = (ev) => {\r\n        ev.preventDefault()\r\n        if (stay._id) {\r\n            try {\r\n                const res = dispatch(updateStay(stay))\r\n                navigate('/')\r\n            } catch (err) {\r\n                console.error('ERROR!', err)\r\n            }\r\n        } else {\r\n            try {\r\n                const res = dispatch(addStay(stay))\r\n                navigate('/')\r\n            } catch (err) {\r\n                console.error('ERROR!', err)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSaveStay}>\r\n            <h1>{stay._id ? 'Edit' : 'Add'} stay</h1>\r\n\r\n            <label htmlFor=\"name\">name</label>\r\n            <input ref={inputRef} {...register('name', 'text')} />\r\n\r\n            <label htmlFor=\"price\">Price</label>\r\n            <input {...register('price', 'number')} />\r\n            <button>submit</button>\r\n        </form>\r\n    )\r\n}","C:\\dev\\coding-academy\\sprint4\\src\\pages\\bnb-app.jsx",["157","158","159"],"C:\\dev\\coding-academy\\sprint4\\src\\pages\\stay-details.jsx",["160","161"],"import { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\nimport { Calender } from \"../cmps/calender\"\r\nimport { Reserve } from \"../cmps/reserve\"\r\nimport { stayService } from \"../services/stay.service\"\r\n\r\n\r\n\r\nexport const StayDetails = () => {\r\n    const [stay, setStay] = useState(null)\r\n    const params = useParams()\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        loadStay()\r\n        // loadReviews()\r\n    }, [])\r\n\r\n    const loadStay = () => {\r\n        const stayId = params.id\r\n        stayService.getById(stayId).then((stay) => {\r\n            console.log('stay:', stay)\r\n            setStay(stay)\r\n            // setReviews(reviews)\r\n        })\r\n    }\r\n\r\n    if (!stay) return <div>Loading...</div>\r\n\r\n    return (\r\n        <div className=\"stay-details\">\r\n            <div className=\"header-details\">\r\n                <h2>{stay.name}</h2>\r\n                <p>{stay.loc.countryCode},{stay.loc.country}</p>\r\n            </div>\r\n\r\n            <div className=\"img-details\">\r\n                <div className=\"main-img\">\r\n                    <img src={stay.imgUrls[0]} alt=\"\" srcSet=\"\" />\r\n                </div>\r\n                <div className=\"top-right\">\r\n                    <img src={stay.imgUrls[1]} alt=\"\" srcSet=\"\" />\r\n                </div>\r\n                <div className=\"bottom-right\">\r\n                    <img src={stay.imgUrls[2]} alt=\"\" srcSet=\"\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"main-details\">\r\n                <div className=\"details-section\">\r\n                    <div className=\"mini-details\">\r\n                        <h3>Entire {stay.type} hosted by {stay.host.fullname}</h3>\r\n                        <ul>\r\n                            <li>{stay.capacity.guests} guests</li>\r\n                            <li>{stay.capacity.bedroom} bedroom</li>\r\n                            <li>{stay.capacity.bed} bed</li>\r\n                            <li>{stay.capacity.bath} bath</li>\r\n                        </ul>\r\n                        <p> profile-img</p>\r\n                    </div>\r\n                    <hr />\r\n                    <div>\r\n                        <p>Free cancellation before Sep 27.</p>\r\n                    </div>\r\n                    <hr />\r\n                    <div>\r\n                        {stay.summary}\r\n                        <div className=\"extra-img-info\">\r\n\r\n                            <div className=\"first-img\">\r\n                                <img src={stay.imgUrls[0]} alt=\"\" srcSet=\"\" />\r\n                            </div>\r\n                            <div className=\"second-img\">\r\n                                <img src={stay.imgUrls[1]} alt=\"\" srcSet=\"\" />\r\n                            </div>\r\n                            <div className=\"third-img\">\r\n                                <img src={stay.imgUrls[2]} alt=\"\" srcSet=\"\" />\r\n                            </div>\r\n                            <div className=\"fourth-img\">\r\n                                <img src={stay.imgUrls[2]} alt=\"\" srcSet=\"\" />\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"date-picker\">\r\n                        <Calender stay={stay}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"reserve\">\r\n                    <Reserve stay={stay}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","C:\\dev\\coding-academy\\sprint4\\src\\cmps\\header-filter.jsx",[],"C:\\dev\\coding-academy\\sprint4\\src\\cmps\\header-profile.jsx",[],"C:\\dev\\coding-academy\\sprint4\\src\\services\\review.service.js",["162"],"// import { httpService } from './http.service'\r\nimport { storageService } from './async-storage.service'\r\n// import { socketService, SOCKET_EVENT_REVIEW_ADDED, SOCKET_EVENT_REVIEW_ABOUT_YOU } from './socket.service'\r\nimport { getActionRemoveReview, getActionAddReview } from '../store/review.actions'\r\n\r\nconst reviewChannel = new BroadcastChannel('reviewChannel')\r\n\r\n// ;(() => {\r\n//   reviewChannel.addEventListener('message', (ev) => {\r\n//     store.dispatch(ev.data)\r\n//   })\r\n//   socketService.on(SOCKET_EVENT_REVIEW_ADDED, (review) => {\r\n//     console.log('GOT from socket', review)\r\n//     store.dispatch(getActionAddReview(review))\r\n//   })\r\n//   socketService.on(SOCKET_EVENT_REVIEW_ABOUT_YOU, (review) => {\r\n//     showSuccessMsg(`New review about me ${review.txt}`)\r\n//   })\r\n// })()\r\n\r\n\r\n\r\nexport const reviewService = {\r\n  add,\r\n  query,\r\n  remove\r\n}\r\n\r\n\r\nfunction query(filterBy) {\r\n  var queryStr = (!filterBy) ? '' : `?name=${filterBy.name}&sort=anaAref`\r\n  // return httpService.get(`review${queryStr}`)\r\n  return storageService.query('review')\r\n}\r\n\r\nasync function remove(reviewId) {\r\n  // await httpService.delete(`review/${reviewId}`)\r\n  await storageService.remove('review', reviewId)\r\n  reviewChannel.postMessage(getActionRemoveReview(reviewId))\r\n\r\n\r\n}\r\nasync function add(review) {\r\n  // const addedReview = await httpService.post(`review`, review)\r\n\r\n  // review.byUser = userService.getLoggedinUser()\r\n  // review.aboutUser = await userService.getById(review.aboutUserId)\r\n  const addedReview = await storageService.post('review', review)\r\n\r\n  reviewChannel.postMessage(getActionAddReview(addedReview))\r\n\r\n  return addedReview\r\n}\r\n\r\n// This way, we can also subscribe to none-store data change\r\n// function subscribe(listener) {\r\n//   reviewChannel.addEventListener('message', listener)\r\n// }\r\n// function unsubscribe(listener) {\r\n//   reviewChannel.removeEventListener('message', listener)\r\n// }\r\n","C:\\dev\\coding-academy\\sprint4\\src\\store\\stay.actions.js",[],"C:\\dev\\coding-academy\\sprint4\\src\\services\\stay.service.js",["163","164"],"C:\\dev\\coding-academy\\sprint4\\src\\hooks\\useFormRegister.js",["165"],"import { useEffect, useState } from \"react\"\nimport { useEffectUpdate } from \"./useEffectUpdate\"\n\nexport const useFormRegister = (initialState, callBack) => {\n\n    const [fields, setFields] = useState(initialState)\n\n    useEffectUpdate(() => {\n        if (callBack) callBack(fields)\n    }, [fields])\n\n    const handleChange = ({ target }) => {\n        const field = target.name\n        let value = target.value\n\n        switch (target.type) {\n            case 'number':\n            case 'range':\n                value = +target.value || ''\n                break;\n            case 'checkbox':\n                value = target.checked\n                break;\n            case 'date':\n                value = new Date(value)\n                break;\n            case 'time':\n                const newDate = new Date()\n                const hours = value.split(':')[0]\n                const minutes = value.split(':')[1]\n                newDate.setHours(hours)\n                newDate.setMinutes(minutes)\n                value = newDate\n                break\n            default:\n                break\n        }\n        setFields(prevFields => ({ ...prevFields, [field]: value }))\n    }\n\n    const getFormattedDate = (value) => {\n        const valueDate = new Date(value)\n        return `${valueDate.getFullYear()}-${(valueDate.getMonth() + 1 + '').padStart(2, '0')}-${(valueDate.getDate() + '').padStart(2, '0')}`\n    }\n    const getFormattedTime = (value) => {\n        const valueTime = new Date(value)\n        return `${(valueTime.getHours() + '').padStart(2, '0')}:${(valueTime.getMinutes() + '').padStart(2, '0')}`\n    }\n    const register = (field, type = '', value) => { // value only used when type === 'radio'\n        const inputProp = {\n            onChange: handleChange,\n            name: field,\n            id: field,\n            value: fields[field],\n            type\n        }\n        if (type === 'checkbox') inputProp.checked = fields[field]\n        if (type === 'date') inputProp.value = getFormattedDate(fields[field])\n        if (type === 'time') inputProp.value = getFormattedTime(fields[field])\n        if (type === 'radio') {\n            inputProp.value = value\n            inputProp.id = value\n            inputProp.checked = fields[field] === value\n        }\n        return inputProp\n    }\n    return [register, setFields, fields]\n}","C:\\dev\\coding-academy\\sprint4\\src\\cmps\\stay-list.jsx",[],"C:\\dev\\coding-academy\\sprint4\\src\\cmps\\stay-filter.jsx",["166","167"],"C:\\dev\\coding-academy\\sprint4\\src\\cmps\\calender.jsx",["168","169","170","171","172"],"import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useFormRegister } from \"../hooks/useFormRegister\";\r\nimport { orderService } from \"../services/order.service\";\r\nimport { savedOrder } from \"../store/order.actions\";\r\n\r\n\r\nexport const Calender = ({stay}) => {\r\n  const [register, setStartDate, date] = useFormRegister({\r\n    startDate: '',\r\n    endDate: ''\r\n  });\r\n\r\n  \r\n  const dispatch = useDispatch()\r\n\r\n  \r\n\r\n  // useEffect(() => { \r\n  //   orderService.\r\n  // }, [])\r\n\r\n  const setDate = (ev) => {\r\n    ev.preventDefault()\r\n    const startDate = new Date(date.startDate).toLocaleDateString()\r\n    const endDate = new Date(date.endDate).toLocaleDateString()\r\n    dispatch(savedOrder(stay._id, startDate, endDate))\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <form onSubmit={(ev) => setDate(ev)}>\r\n\r\n        <label htmlFor=\"start\">Start date:</label>\r\n        <input {...register('startDate', 'date')} />\r\n\r\n        <label htmlFor=\"end\">End date:</label>\r\n        <input {...register('endDate', 'date')} />\r\n\r\n        <button>set</button>\r\n      </form>\r\n    </section>\r\n  )\r\n};\r\n\r\n","C:\\dev\\coding-academy\\sprint4\\src\\cmps\\reserve.jsx",["173","174"],"import { useState } from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { useRef } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\n\r\nexport const Reserve = ({ stay }) => {\r\n\r\n    const { order } = useSelector(state => state.orderModule)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const [guestsCount, setGuestsCount] = useState({\r\n        adults: 0,\r\n        children: 0,\r\n        infants: 0,\r\n        pets: 0,\r\n    })\r\n\r\n\r\n    const toggleMenu = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n\r\n    const onClick = (category, action) => {\r\n        action = action === '+' ? 1 : -1\r\n        if (guestsCount[category] + action < 0 || action > stay.capacity) return\r\n        guestsCount[category] += action\r\n        setGuestsCount(prevGuestsCount => ({ ...prevGuestsCount, guestsCount }))\r\n        console.log(guestsCount.adults)\r\n    }\r\n\r\n    return (\r\n        <div className=\"reserve-form\">\r\n            <div>\r\n                <span>{stay.price} night</span>\r\n            </div>\r\n\r\n            <div className=\"reserve-info\">\r\n                <button className=\"reserve-dates\">\r\n                    <div className=\"check-in\">\r\n                        <div className=\"txt-reserve\">Check-in</div>\r\n                        <div className=\"date-reserve\">{order.startDate}</div>\r\n                    </div>\r\n                    <div className=\"check-out\">\r\n                        <div className=\"txt-reserve\">Check-out</div>\r\n                        <div className=\"date-reserve\">{order.endDate}</div>\r\n                    </div>\r\n                </button>\r\n\r\n                <div className=\"guest-info\">\r\n                    <button className=\"guests-details\" onClick={() => toggleMenu()}>\r\n                        <div>Guests</div>\r\n                        <div>\r\n                            {guestsCount.adults + guestsCount.children} guest\r\n                            {(guestsCount.infants) ? ',' + guestsCount.infants + 'infants' : ''}\r\n                            {(guestsCount.pets) ? ',' + guestsCount.pets + 'pets' : ''}\r\n                        </div>\r\n                    </button>\r\n                    {isOpen &&\r\n                    \r\n                            <div className=\"select-guests\">\r\n                                <div className=\"pick-guest-account\">\r\n                                    <div>\r\n                                        <h3>Adults</h3>\r\n                                        <h5>Age 13+</h5>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span onClick={() => onClick('adults', '+')}>+</span>\r\n                                        <span>{guestsCount.adults}</span>\r\n                                        <span onClick={() => onClick('adults', '-')}>-</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"pick-guest-account\">\r\n                                    <div>\r\n                                        <h3>Children</h3>\r\n                                        <h5>Ages 2-12</h5>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span onClick={() => onClick('children', '+')}>+</span>\r\n                                        <span>{guestsCount.children}</span>\r\n                                        <span onClick={() => onClick('children', '-')}>-</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"pick-guest-account\">\r\n                                    <div>\r\n                                        <h3>Infants</h3>\r\n                                        <h5>Under 2</h5>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span onClick={() => onClick('infants', '+')}>+</span>\r\n                                        <span>{guestsCount.infants}</span>\r\n                                        <span onClick={() => onClick('infants', '-')}>-</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"pick-guest-account\">\r\n                                    <div>\r\n                                        <h3>Pets</h3>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span onClick={() => onClick('pets', '+')}>+</span>\r\n                                        <span>{guestsCount.pets}</span>\r\n                                        <span onClick={() => onClick('pets', '-')}>-</span>\r\n                                    </div>\r\n                                </div>\r\n                                <button onClick={() => toggleMenu()}>close</button>\r\n                            </div>\r\n                            \r\n                        \r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","C:\\dev\\coding-academy\\sprint4\\src\\services\\util.service.js",[],"C:\\dev\\coding-academy\\sprint4\\src\\hooks\\useEffectUpdate.js",["175","176"],"import { useEffect, useRef } from \"react\"\n\nexport const useEffectUpdate = (callBack, dependencies) => {\n    \n    const isFirst = useRef(true)\n\n    useEffect(()=>{\n        if (isFirst.current) {\n            isFirst.current = false\n            return\n        }   \n        callBack()\n    }, dependencies)\n    \n}","C:\\dev\\coding-academy\\sprint4\\src\\services\\order.service.js",["177"],"\r\nimport { storageService } from './async-storage.service.js'\r\nimport { utilService } from './util.service.js'\r\nimport { userService } from './user.service.js'\r\n\r\n// This file demonstrates how to use a BroadcastChannel to notify other browser tabs \r\n\r\nconst STORAGE_KEY = 'order'\r\n\r\nexport const orderService = {\r\n    query,\r\n    getById,\r\n    save,\r\n    remove,\r\n    createOrder\r\n}\r\nwindow.cs = orderService\r\n\r\nfunction query(filterBy) {\r\n    return storageService.query(STORAGE_KEY).then(orders => {\r\n        \r\n        // if(!orders) return _getEmptyOrder()\r\n        return orders\r\n    }\r\n    )\r\n}\r\n\r\nfunction createOrder(hostId, startDate, endDate){\r\n     const order = _getNewOrder(hostId, startDate, endDate)\r\n     save(order)\r\n     return order\r\n}\r\n\r\nfunction getById(orderId) {\r\n    return storageService.get(STORAGE_KEY, orderId)\r\n    // return axios.get(`/api/order/${orderId}`)\r\n}\r\nasync function remove(orderId) {\r\n    await storageService.remove(STORAGE_KEY, orderId)\r\n}\r\n\r\nasync function save(order) {\r\n    var savedOrder\r\n    if (order._id) {\r\n        savedOrder = await storageService.put(STORAGE_KEY, order)\r\n\r\n    } else {\r\n        // Later, owner is set by the backend\r\n        let newOrder = _getNewOrder()\r\n        newOrder.name = order.name\r\n        newOrder.price = order.price\r\n        console.log('newOrder:', newOrder)\r\n        savedOrder = await storageService.post(STORAGE_KEY, newOrder)\r\n    }\r\n    return savedOrder\r\n}\r\n\r\nfunction _getNewOrder(hostId='', startDate='', endDate='') {\r\n    return {\r\n        \"_id\": utilService.makeId(),\r\n        hostId,\r\n        \"createdAt\": Date.now(),\r\n        \"buyer\": {\r\n            \"_id\": \"u101\",\r\n            \"fullname\": \"User 1\"\r\n        },\r\n        \"totalPrice\": 160,\r\n        startDate,\r\n        endDate,\r\n        \"guests\": {\r\n            \"adults\": 2,\r\n            \"kids\": 1\r\n        },\r\n        \"stay\": {\r\n            \"_id\": \"h102\",\r\n            \"name\": \"House Of Uncle My\",\r\n            \"price\": 80.00\r\n        },\r\n        \"status\": \"pending\"\r\n    }\r\n\r\n}\r\n\r\n\r\n// TEST DATA\r\n\r\n\r\n","C:\\dev\\coding-academy\\sprint4\\src\\store\\order.actions.js",[],"C:\\dev\\coding-academy\\sprint4\\src\\cmps\\stay-preview.jsx",["178"],"import React from \"react\";\r\n\r\nexport function StayPreview({ stay }) {\r\n    return (\r\n        <React.Fragment>\r\n            <div><img src={stay.imgUrls[0]}/></div>\r\n            <div>\r\n                <h4>{stay.loc.city}, {stay.loc.country}</h4>\r\n                <p>{stay.loc.address}, {stay.loc.city}</p>\r\n                <p>{stay.capacity.guests} bads</p>\r\n                <p>Oct 12-18</p>\r\n                <p className=\"black-font\"><span>${stay.price}</span> night</p>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}",{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":7,"column":9,"nodeType":"185","messageId":"186","endLine":7,"endColumn":17},{"ruleId":"187","severity":1,"message":"188","line":46,"column":9,"nodeType":"189","messageId":"190","endLine":47,"endColumn":66},{"ruleId":"183","severity":1,"message":"191","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":33},{"ruleId":"183","severity":1,"message":"192","line":30,"column":10,"nodeType":"185","messageId":"186","endLine":30,"endColumn":22},{"ruleId":"183","severity":1,"message":"193","line":1,"column":19,"nodeType":"185","messageId":"186","endLine":1,"endColumn":30},{"ruleId":"183","severity":1,"message":"194","line":1,"column":10,"nodeType":"185","messageId":"186","endLine":1,"endColumn":24},{"ruleId":"183","severity":1,"message":"195","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":21},{"ruleId":"183","severity":1,"message":"196","line":2,"column":21,"nodeType":"185","messageId":"186","endLine":2,"endColumn":29},{"ruleId":"183","severity":1,"message":"197","line":16,"column":22,"nodeType":"185","messageId":"186","endLine":16,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":36,"column":8,"nodeType":"200","endLine":36,"endColumn":10,"suggestions":"201"},{"ruleId":"183","severity":1,"message":"202","line":42,"column":23,"nodeType":"185","messageId":"186","endLine":42,"endColumn":26},{"ruleId":"183","severity":1,"message":"202","line":49,"column":23,"nodeType":"185","messageId":"186","endLine":49,"endColumn":26},{"ruleId":"183","severity":1,"message":"196","line":1,"column":28,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"198","severity":1,"message":"203","line":18,"column":8,"nodeType":"200","endLine":18,"endColumn":10,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":39,"column":22,"nodeType":"207","endLine":39,"endColumn":45},{"ruleId":"183","severity":1,"message":"208","line":13,"column":11,"nodeType":"185","messageId":"186","endLine":13,"endColumn":19},{"ruleId":"198","severity":1,"message":"209","line":18,"column":8,"nodeType":"200","endLine":18,"endColumn":10,"suggestions":"210"},{"ruleId":"183","severity":1,"message":"211","line":31,"column":7,"nodeType":"185","messageId":"186","endLine":31,"endColumn":15},{"ruleId":"183","severity":1,"message":"212","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":21},{"ruleId":"183","severity":1,"message":"195","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":21},{"ruleId":"183","severity":1,"message":"213","line":1,"column":10,"nodeType":"185","messageId":"186","endLine":1,"endColumn":19},{"ruleId":"183","severity":1,"message":"214","line":6,"column":22,"nodeType":"185","messageId":"186","endLine":6,"endColumn":31},{"ruleId":"183","severity":1,"message":"215","line":6,"column":33,"nodeType":"185","messageId":"186","endLine":6,"endColumn":41},{"ruleId":"183","severity":1,"message":"196","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"213","line":2,"column":10,"nodeType":"185","messageId":"186","endLine":2,"endColumn":19},{"ruleId":"183","severity":1,"message":"216","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":21},{"ruleId":"183","severity":1,"message":"217","line":6,"column":10,"nodeType":"185","messageId":"186","endLine":6,"endColumn":22},{"ruleId":"183","severity":1,"message":"218","line":11,"column":20,"nodeType":"185","messageId":"186","endLine":11,"endColumn":32},{"ruleId":"183","severity":1,"message":"213","line":2,"column":10,"nodeType":"185","messageId":"186","endLine":2,"endColumn":19},{"ruleId":"183","severity":1,"message":"219","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":16},{"ruleId":"198","severity":1,"message":"220","line":13,"column":8,"nodeType":"185","endLine":13,"endColumn":20},{"ruleId":"198","severity":1,"message":"221","line":13,"column":8,"nodeType":"185","endLine":13,"endColumn":20,"suggestions":"222"},{"ruleId":"183","severity":1,"message":"195","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":21},{"ruleId":"205","severity":1,"message":"206","line":6,"column":18,"nodeType":"207","endLine":6,"endColumn":46},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'newState' is assigned a value but never used.","Identifier","unusedVar","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'getActionSetWatchedUser' is defined but never used.","'onUserUpdate' is defined but never used.","'useNavigate' is defined but never used.","'showSuccessMsg' is defined but never used.","'userService' is defined but never used.","'useState' is defined but never used.","'setStay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.stayId'. Either include it or remove the dependency array.","ArrayExpression",["225"],"'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["226"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadStay'. Either include it or remove the dependency array.",["227"],"'queryStr' is assigned a value but never used.","'utilService' is defined but never used.","'useEffect' is defined but never used.","'setFilter' is assigned a value but never used.","'filterBy' is assigned a value but never used.","'useSelector' is defined but never used.","'orderService' is defined but never used.","'setStartDate' is assigned a value but never used.","'useRef' is defined but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array. If 'callBack' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["228"],"no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},"Update the dependencies array to be: [params.stayId]",{"range":"237","text":"238"},"Update the dependencies array to be: [dispatch]",{"range":"239","text":"240"},"Update the dependencies array to be: [loadStay]",{"range":"241","text":"242"},"Update the dependencies array to be: [callBack]",{"range":"243","text":"244"},[1025,1027],"[params.stayId]",[704,706],"[dispatch]",[504,506],"[loadStay]",[288,300],"[callBack]"]